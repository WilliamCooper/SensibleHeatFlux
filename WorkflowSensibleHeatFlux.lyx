#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\input colordvi
\usepackage{color}
\fancyhead{}
\fancyfoot[CE,CO]{}
\newtoks{\addressee} \global\addressee={}
\newdimen\longindent \longindent=3.5truein
\fancyhead[L]{Memo to: \the\addressee \\ \datetoday \\ Page \thepage \hfill}
\renewcommand{\headrulewidth}{0.0pt}
\newenvironment{lyxlist}[1]
{\begin{list}{}
{\settowidth{\labelwidth}{#1}
\setlength{\leftmargin}{\labelwidth}
\addtolength{\leftmargin}{\labelsep}
\renewcommand{\makelabel}[1]{##1\hfil}}}
{\end{list}}
\newcommand{\datetoday}{\number\day\space
     \ifcase\month\or January\or February\or March\or April\or May\or
     June\or July\or August\or September\or October\or November\or
     December\fi
     \space\number\year}
\newcommand{\EOLmemo}{\null \vskip-1.5truein
{\raggedright \textsf{\textsc{\large \textcolor{blue}{Earth Observing Laboratory}}}}\par
{\raggedright \textsf{\textsl{\textcolor{blue}{Memorandum:}}}} \par \vskip6pt
{\color{blue}{\hrule}}\par
\vskip0.3truein \leftline{\hskip \longindent \datetoday} \vskip0.2truein
\thispagestyle{empty}}
\newcommand{\attachm}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachments:] {#1}
\end{lyxlist}}
\newcommand{\cc}[1]{\begin{lyxlist}{Attachments:00}
\item [cc:] {#1}
\end{lyxlist}}
\newcommand{\attach}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachment:] {#1}
\end{lyxlist}}
%usage: \encl{A\\B\\C} or \cc{ma,e1\\name2\\name3}
\end_preamble
\use_default_options false
\begin_modules
knitr
hanging
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding default
\fontencoding global
\font_roman "times" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.54cm
\topmargin 3.54cm
\rightmargin 2.54cm
\bottommargin 2.54cm
\headheight 1cm
\headsep 2cm
\footskip 0.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
EOLmemo 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
global
\backslash
addressee={SensibleHeatFlux Archive: workflow document}% change "File" to
 the "To:" name
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
To:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
the
\backslash
addressee
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
From:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Al Cooper
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 
\family sans
\shape smallcaps
\color blue
Subject:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Workflow comments for the Tech Note re sensible-heat flux
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<initialization,echo=FALSE,include=FALSE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

library(knitr)
\end_layout

\begin_layout Plain Layout

opts_chunk$set(echo=FALSE, include=FALSE, fig.lp="fig:")
\end_layout

\begin_layout Plain Layout

opts_chunk$set(fig.width=6, fig.height=5, fig.align="center", digits=4)
\end_layout

\begin_layout Plain Layout

thisFileName <- "WorkflowSensibleHeatFlux"
\end_layout

\begin_layout Plain Layout

require(Ranadu, quietly = TRUE, warn.conflicts=FALSE)
\end_layout

\begin_layout Plain Layout

library(ggplot2)
\end_layout

\begin_layout Plain Layout

library(grid)
\end_layout

\begin_layout Plain Layout

library(ggthemes)
\end_layout

\begin_layout Plain Layout

library(nleqslv)
\end_layout

\begin_layout Plain Layout

library(magrittr)
\end_layout

\begin_layout Plain Layout

library(dplyr)
\end_layout

\begin_layout Plain Layout

Directory <- DataDirectory ()
\end_layout

\begin_layout Plain Layout

a <- 0.733 # 0.713
\end_layout

\begin_layout Plain Layout

tau1 <- 0.0308  # 0.0335
\end_layout

\begin_layout Plain Layout

tau2 <- 0.447
\end_layout

\begin_layout Plain Layout

Param <- list(
\end_layout

\begin_layout Plain Layout

  a = a,
\end_layout

\begin_layout Plain Layout

  tau1 = tau1,
\end_layout

\begin_layout Plain Layout

  tau2 = tau2
\end_layout

\begin_layout Plain Layout

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Purpose
\end_layout

\begin_layout Standard
This workflow description provides additional details leading to the document
 generated by 
\begin_inset Quotes eld
\end_inset

SensibleHeatFluxTechNote.Rnw
\begin_inset Quotes erd
\end_inset

 and provides additional detail not in the report 
\begin_inset Quotes eld
\end_inset

Sensible\SpecialChar softhyphen
HeatFluxTechNote.pdf.
\begin_inset Quotes erd
\end_inset

 Sensible\SpecialChar softhyphen
HeatFluxTechNote.Rnw contains both text (in \SpecialChar LaTeX
 format) and R processing
 script for the analyses in the resulting report.
 The description of workflow provided here includes the process of collecting
 the observations and processing them to data files, the data archives used,
 the steps required to generate the plots and other results including the
 instances where manual intervention is required to identify appropriate
 subsets of the data, the relevant R code and \SpecialChar LaTeX
 documents, and all the steps
 leading to the generation of the text in the technical note.
 "SensibleHeatFluxTechNote.Rnw" is the definitive reference, but this overview
 and these diagrams will help explain the workflow at a general level and
 so should substitute for reading the R and \SpecialChar LaTeX
 code in most cases.
 The intent is to describe the workflow in sufficient detail to support
 replication of the analysis and figures presented in the report, to facilitate
 changes based on new data or new analysis approaches, and to make it practical
 to apply the proposed algorithms to data collected by research aircraft
 used in atmospheric studies.
\end_layout

\begin_layout Standard
The associated document described here was formatted for publication as
 an NCAR Technical Note, but will probably be retained as a web-posted technical
 not.
 For brevity it will be references as 
\begin_inset Quotes eld
\end_inset

the TN
\begin_inset Quotes erd
\end_inset

 here.
 Some parts of the TN may be suitable to accompany separate journal articles
 envisioned to augment this TN or perhaps to replace it if it is decided
 that publishing this in a series of papers is preferable.
 The alternative under consideration is to submit this series, all with
 a title like 
\begin_inset Quotes eld
\end_inset

Corrections for the Delayed Response of Airborne Thermometers:
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Part 1: Determining the Characteristic Response Using Dynamic Heating
\end_layout

\begin_deeper
\begin_layout Enumerate
Background and Differential Equations
\end_layout

\begin_layout Enumerate
Solution and Transfer Function
\end_layout

\begin_layout Enumerate
Fits to Forcing by Dynamic Heating
\end_layout

\begin_layout Enumerate
Corrections to the Measurements
\end_layout

\end_deeper
\begin_layout Itemize
Part 2: Errors Introduced By Conventional Data Processing
\end_layout

\begin_deeper
\begin_layout Enumerate
Conventional Data Processing and the Source of Errors
\end_layout

\begin_layout Enumerate
A Procedure for Removing These Errors
\end_layout

\end_deeper
\begin_layout Itemize
Part 3: Correcting Measurements of Sensible-Heat Flux
\end_layout

\begin_deeper
\begin_layout Enumerate
Illustrating Errors Arising from Response Characteristics
\end_layout

\begin_layout Enumerate
Using the Transfer Function to Correct These Errors
\end_layout

\begin_layout Enumerate
Simulation Examples for Illustration
\end_layout

\end_deeper
\begin_layout Section
Acquisition of the primary data
\end_layout

\begin_layout Standard
The measurements used in this report were collected using the NSF/NCAR research
 aircraft during the various research projects.
 The onboard data-acquisition program 'aeros' recorded the data in digital
 format, and those data files were then processed by the program 'nimbus'
 to produce an archive in NetCDF format.
 The software management group of NCAR/EOL maintains a version-controlled
 archive of these programs, so if they are of interest they can be obtained
 by contacting the data-management group of EOL (
\begin_inset CommandInset href
LatexCommand href
name "at this "
target "raf-dm@eol.ucar.edu"
type "mailto:"
literal "false"

\end_inset

 or 
\begin_inset CommandInset href
LatexCommand href
name "this"
target "datahelp@eol.ucar.edu"
type "mailto:"
literal "false"

\end_inset

 address).
 The data files available from NCAR/EOL can be found at links on 
\begin_inset CommandInset href
LatexCommand href
name "this URL"
target "https://www.eol.ucar.edu/all-field-projects-and-deployments"
literal "false"

\end_inset

.
 The details of the processing algorithms including those for the calculation
 of wind are documented in this report on 
\begin_inset CommandInset href
LatexCommand href
name "Processing Algorithms"
target "https://github.com/NCAR/aircraft_ProcessingAlgorithms/blob/master/ProcessingAlgorithms.pdf"
literal "false"

\end_inset

 and in 
\begin_inset CommandInset citation
LatexCommand citet
key "Bulletin23"
literal "true"

\end_inset

.
 These procedures as they pertain to the measurement of wind are also documented
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "Cooper2016ncartn"
literal "true"

\end_inset

.
 The resulting data files contain measurements in scientific units and brief
 descriptions of each measurement, included as netCDF attributes for the
 files and for each variable.
\end_layout

\begin_layout Section
The SensibleHeatFluxTechNote.Rnw file
\end_layout

\begin_layout Standard
The .Rnw file is basically \SpecialChar LaTeX
 text, generated for simplicity using \SpecialChar LyX
 and exported
 to .Rnw format and then processed in RStudio (
\begin_inset CommandInset citation
LatexCommand citet
key "RStudio2012"
literal "true"

\end_inset

).
 The .lyx file (SensibleHeatFluxTechNote.lyx) will run equivalently and produce
 a PDF-format version of the manuscript.
 The .Rnw file was generated from the .lyx file, but some subsequent editing
 of the .Rnw file makes that the reference version for the TN.
 Within the .Rnw file or within the .lyx file there are 
\begin_inset Quotes eld
\end_inset

chunks
\begin_inset Quotes erd
\end_inset

 of R code (
\begin_inset CommandInset citation
LatexCommand cite
key "Rlanguage"
literal "true"

\end_inset

), delineated by a header having this format:
\end_layout

\begin_layout LyX-Code
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code
<<title, var=setting, ...>>=
\end_layout

\begin_layout LyX-Code
...R code...
\end_layout

\begin_layout LyX-Code
@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
These chunks generate plots and other results of analyses that are incorporated
 into the manuscript using 'knitr' (
\begin_inset CommandInset citation
LatexCommand citet
key "Xie2014a,Xie2014b"
literal "true"

\end_inset

).
 In RStudio, the chunks appear as gray sections in the file when it is edited.
 Where tasks involve execution of R code, the chunk containing the code
 is referenced in the discussion below.
 Any results from the processing can be incorporated into the \SpecialChar LaTeX
 text via
 
\begin_inset Quotes eld
\end_inset


\backslash
Sexpr{}
\begin_inset Quotes erd
\end_inset

 calls embedded in the \SpecialChar LaTeX
 portion of the file.
\end_layout

\begin_layout Standard
Two 
\begin_inset Quotes eld
\end_inset

switches
\begin_inset Quotes erd
\end_inset

 serve to speed execution of the code: (1) 
\begin_inset Quotes eld
\end_inset

ReloadData,
\begin_inset Quotes erd
\end_inset

 which when TRUE causes the original archive data files to be read; and
 the option 
\begin_inset Quotes eld
\end_inset

CACHE
\begin_inset Quotes erd
\end_inset

 which, when true, causes previously generated subsets of the results to
 be re-used as saved in a subdirectory 
\begin_inset Quotes eld
\end_inset

cache.
\begin_inset Quotes erd
\end_inset

 Both are provided to speed execution in cases where small changes are made.
 When ReloadData is FALSE subsets of data files previously saved as 
\begin_inset Quotes eld
\end_inset

Rdata
\begin_inset Quotes erd
\end_inset

 files are restored to R data.frames, a process that is much faster than
 re-reading the original archive data file.
 If cache is FALSE all calculations are performed, but using 
\begin_inset Quotes eld
\end_inset

cache=TRUE
\begin_inset Quotes erd
\end_inset

 is usually much faster after the first run.
 To ensure a clean run, set CACHE to be FALSE and remove all entries from
 the 
\begin_inset Quotes eld
\end_inset

cache
\begin_inset Quotes erd
\end_inset

 subdirectory.
\end_layout

\begin_layout Section
Required R packages including Ranadu
\end_layout

\begin_layout Standard
The R code used for analysis reported in this paper relies heavily on a
 package of routines for R called 
\begin_inset Quotes eld
\end_inset

Ranadu.
\begin_inset Quotes erd
\end_inset

 This is a set of R scripts for working with the NetCDF archive data files
 produced by NCAR/EOL/RAF, and it includes some convenience routines for
 generating plots and performing other data-analysis tasks with the archived
 data.
 The Ranadu package is available at this 
\begin_inset CommandInset href
LatexCommand href
name "GitHub address"
target "https://github.com/NCAR/Ranadu/tree/WAC"
literal "false"

\end_inset

.
 To run the R code referenced here, that package should be included in the
 R installation.
 The SensibleHeatFluxTechNote.Rnw routine requires that package and also
 some others referenced in the file, including 
\begin_inset Quotes eld
\end_inset

knitr
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

ggplot2
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

grid
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

ggthemes
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

zoo
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

signal
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

magrittr
\begin_inset Quotes erd
\end_inset

.
 In addition, Ranadu requires 
\begin_inset Quotes eld
\end_inset

ncdf4
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

tcltk
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

stats
\begin_inset Quotes erd
\end_inset

.
 Some parts of 
\begin_inset Quotes eld
\end_inset

Ranadu
\begin_inset Quotes erd
\end_inset

 reference additional packages as needed, but they are not used in SensibleHeatF
luxTechNote.Rnw so do not need to be available for this routine to run.
\end_layout

\begin_layout Standard
The data processing for this manuscript involved revising some parts of
 the Ranadu package, as listed below.
 The most significant change is the addition of a 
\begin_inset Quotes eld
\end_inset

flux()
\begin_inset Quotes erd
\end_inset

 function to the package.
 That function is used to generate and plot the cospectrum used to calculate
 the flux, and it can optionally apply the correction procedure developed
 in the TN.
 It is described in the following subsection.
\end_layout

\begin_layout Standard
It may be worthwhile to call attention to the 
\begin_inset Quotes eld
\end_inset

pipe
\begin_inset Quotes erd
\end_inset

 that is used frequently in the R code.
 This relies on the 
\begin_inset Quotes eld
\end_inset

magrittr
\begin_inset Quotes erd
\end_inset

 package for R.
 The general structure resembles the following:
\end_layout

\begin_layout LyX-Code
DataFrame %>% 
\end_layout

\begin_layout LyX-Code
  select(Time, ATH1, ATF1, Ts) %>% 
\end_layout

\begin_layout LyX-Code
  selectTime(114500, 115000) %>% 
\end_layout

\begin_layout LyX-Code
  plotWAC()
\end_layout

\begin_layout Standard
At each occurrence of %>% the output from the previous command is piped
 to the next command as the first argument.
 This provides clear documentation of the sequences used to construct various
 plots.
\end_layout

\begin_layout Standard
The analysis uses R data.frames that are generated from the reference netCDF
 files by the function 
\begin_inset Quotes eld
\end_inset

Ranadu::getNetCDF()
\begin_inset Quotes erd
\end_inset

.
 Most of the plots are generated using 
\begin_inset Quotes eld
\end_inset

Ranadu::ggplotWAC()
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

Ranadu::plotWAC()
\begin_inset Quotes erd
\end_inset

, which are simple convenience routines that set various options preferred
 by the author before calling the R 
\begin_inset Quotes eld
\end_inset

ggplot()
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

plot()
\begin_inset Quotes erd
\end_inset

 routines.
\end_layout

\begin_layout Standard
There is a manual for the Ranadu package that includes information on how
 to install it.
 See 
\begin_inset CommandInset href
LatexCommand href
name "this URL"
target "https://github.com/NCAR/Ranadu/blob/master/inst/RanaduManual.pdf"
literal "false"

\end_inset

.
 However, to get the latest functions including 
\begin_inset Quotes eld
\end_inset

flux()
\begin_inset Quotes erd
\end_inset

 and some other modifications used here, download the 
\begin_inset Quotes eld
\end_inset

WAC
\begin_inset Quotes erd
\end_inset

 branch.
 The main branch will eventually be updated, so this is a temporary solution.
\end_layout

\begin_layout Subsection
Ranadu::flux ()
\end_layout

\begin_layout Standard
This function calculates the appropriate cospectrum, generates a plot of
 that cospectrum, calculates the total flux and the partial flux associated
 with fluctuations smaller than a specified wavelength, and returns a data.frame
 containing the frequency, the smoothed cospectrum (not weighted by frequency),
 and the exceedance values.
 The data.frame also has attributes "Flux" and "FluxL" representing the total
 flux and the flux from wavelengths smaller than the wavelength 
\begin_inset Quotes eld
\end_inset

wavelengthLimit
\begin_inset Quotes erd
\end_inset

.
 The 
\begin_inset Quotes eld
\end_inset

wavelengthLimit
\begin_inset Quotes erd
\end_inset

 is also included as an attribute of the returned data.frame.
 
\end_layout

\begin_layout Standard
An optional argument to this function is 
\begin_inset Quotes eld
\end_inset

Par
\begin_inset Quotes erd
\end_inset

 which can be set to appropriate response parameters for a temperature sensor.
 In that case, a response function is generated using those parameters and
 the cospectrum is corrected using that response function.
\end_layout

\begin_layout Standard
This plot generated by this function is described in more detail in Section
 5 of the Technical Note, fourth paragraph.
 The routine was used to generate figures like Fig.
\begin_inset space ~
\end_inset

28 in the TN\SpecialChar endofsentence
 Within R, further information can be found using the R help
 facilities once the Ranadu package is available.
\end_layout

\begin_layout Subsection
Ranadu::CohPhase ()
\end_layout

\begin_layout Standard
Another Ranadu function used for the calculations in the TN is 
\begin_inset Quotes eld
\end_inset

Ranadu::CohPhase()
\begin_inset Quotes erd
\end_inset

, which calculates and plots the squared coherence and phase between two
 time series.
 That function was recently modified for the needs of the analysis leading
 to the TN\SpecialChar endofsentence
 Like all Ranadu functions, it can be obtained from the GitHub
 reference above and its documentation can be checked using R help facilities
 once the package is installed.
 It was used to generate the cospectra used in the determination of the
 phase between the measured recovery temperature and the expected effect
 of dynamic heating.
\end_layout

\begin_layout Standard
A modified version of this routine is included in the .Rnw file, named CohP(
 ).
 It was modified to return binned values of the phase and amplitude ratio
 labeled with bin numbers so that multiple cross-spectra covering the same
 frequency interval could be averaged to obtain these values.
 This special version was used to find the averaged values entering, for
 example, Figs.
\begin_inset space ~
\end_inset

5 and 6 in the TN.
 See the discussion that follows in Sect.
\begin_inset space ~
\end_inset

6.1.1.
\end_layout

\begin_layout Subsection
Ranadu::VSpec ()
\end_layout

\begin_layout Standard
Plots of variance spectra, like that shown in Figs.
\begin_inset space ~
\end_inset

3 and 4, were generated using the Ranadu function 
\begin_inset Quotes eld
\end_inset

VSpec()
\begin_inset Quotes erd
\end_inset

.
 There is a brief discussion of the function in 
\begin_inset Quotes eld
\end_inset

RanaduManual.pdf
\begin_inset Quotes erd
\end_inset

 p.
\begin_inset space ~
\end_inset

39, available at 
\begin_inset CommandInset href
LatexCommand href
name "this URL"
target "https://github.com/NCAR/Ranadu/blob/master/inst/RanaduManual.pdf"
literal "false"

\end_inset

.
 A tutorial Shiny-app is also available 
\begin_inset CommandInset href
LatexCommand href
name "here"
target "https://ncar-eol.shinyapps.io/VarSpec/"
literal "false"

\end_inset

 that discusses plotting spectral variance and describes some of the options
 available in 
\begin_inset Quotes eld
\end_inset

VSpec()
\begin_inset Quotes erd
\end_inset

.
 R help facilities also provide documentation once the 
\begin_inset Quotes eld
\end_inset

Ranadu
\begin_inset Quotes erd
\end_inset

 package is installed.
\end_layout

\begin_layout Subsection
Ranadu::SmoothInterp( )
\end_layout

\begin_layout Standard
Many functions including the standard spectral analysis functions and stats::fft
 will fail if there are missing values in the processed time series.
 To avoid this problem, 
\begin_inset Quotes eld
\end_inset

SmoothInterp( )
\begin_inset Quotes erd
\end_inset

 has been used extensively in the code for this TN.
 It calls 
\begin_inset Quotes eld
\end_inset

zoo::na.approx( )
\begin_inset Quotes erd
\end_inset

 to substitute interpolated values for missing values, and it uses the 
\begin_inset Quotes eld
\end_inset

rule = 2
\begin_inset Quotes erd
\end_inset

 argument to that function to extend values to beginning and ending sequences
 with missing values.
 (
\begin_inset Quotes eld
\end_inset

zoo:na.spline( )
\begin_inset Quotes erd
\end_inset

 has been used in this function, but it tends to introduce extraneous variance.)
 By default, 
\begin_inset Quotes eld
\end_inset

SmoothInterp( )
\begin_inset Quotes erd
\end_inset

 also applies Savitzky-Golay smoothing also, so this needs to be suppressed
 by the 
\begin_inset Quotes eld
\end_inset

.Length=0
\begin_inset Quotes erd
\end_inset

 argument to 
\begin_inset Quotes eld
\end_inset

SmoothInterp( )
\begin_inset Quotes erd
\end_inset

 when smoothing is not desired (which applies to all uses in this TN).
 
\begin_inset Quotes eld
\end_inset

SmoothInterp( )
\begin_inset Quotes erd
\end_inset

 is called internally from within some of the functions that deal with variance
 spectra, including 
\begin_inset Quotes eld
\end_inset

VSpec( )
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

CohPhase( )
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The following construction can be used to remove all the missing values
 in a data.frame (as in code chunk 
\begin_inset Quotes eld
\end_inset

SOC11x
\begin_inset Quotes erd
\end_inset

) and substitute interpolated values:
\end_layout

\begin_layout LyX-Code
removeNA <- function (D) {D <- SmoothInterp(D, .Length=0)}
\end_layout

\begin_layout LyX-Code
DSW <- as.data.frame(lapply(DS11, removeNA))
\end_layout

\begin_layout LyX-Code
DSW <- transferAttributes(DS11, DSW)
\end_layout

\begin_layout Standard
The last line is needed because the 
\begin_inset Quotes eld
\end_inset

lapply( )
\begin_inset Quotes erd
\end_inset

 function doesn't carry forward the variable attributes so this transfers
 them from the original data.frame.
\end_layout

\begin_layout Subsection
rk4.integrate()
\begin_inset CommandInset label
LatexCommand label
name "subsec:rk4.integrate()"

\end_inset


\end_layout

\begin_layout Standard
For use in this study, a new function was defined that implements the Cash-Karp
 method of step adjustment (
\begin_inset CommandInset citation
LatexCommand citet
key "cash1990variable"
literal "false"

\end_inset

) for a fourth-order Runge-Kutta integration.
 This was done when it became apparent that the standard R function runge.kutta()
 in the 
\begin_inset Quotes eld
\end_inset

rmutil
\begin_inset Quotes erd
\end_inset

 package (
\begin_inset CommandInset citation
LatexCommand citet
key "runge.kutta"
literal "false"

\end_inset

) did not perform adequately for step sizes of 0.04
\begin_inset space ~
\end_inset

s (as required for processing 25-Hz files) because the shorter time constant
 for the unheated Rosemount sensor is smaller than this step size.
 This new integration routine may be added eventually to the Ranadu package
 but for now is defined in a separate code 
\begin_inset Quotes eld
\end_inset

chunk
\begin_inset Quotes erd
\end_inset

 near the beginning of the 
\begin_inset Quotes eld
\end_inset

Rnw
\begin_inset Quotes erd
\end_inset

 file.
 It is based on the description of the method in 
\begin_inset CommandInset citation
LatexCommand citet
key "Press:1992:NRC:148286"
literal "false"

\end_inset

 but has been coded independently in R for this TN.
 Unlike the standard method, it does not ever increase the step size above
 the time increment in the file, but if the error estimate for a particular
 step does not meet the specified tolerance then the step is divided into
 multiple smaller steps.
 If the tolerance is still not met, further subdivision occurs.
 
\end_layout

\begin_layout Standard
One aspect of how this routine is used makes it problematic for general
 use: The integration takes as an argument a function that provides the
 derivative to be integrated, but that function takes a single argument.
 As applied in this TN, however, additional variables are needed to calculate
 the derivative.
 Here is an example of a function definition used to find the temperature
 of the support that contacts the wire:
\end_layout

\begin_layout LyX-Code
fS <- function(y, i) {  # Eq.
 Ts3
\end_layout

\begin_layout LyX-Code
    ((1/a) * (tau1 * DS11$DTMDT[i] + DS11$RTF1[i] - (1-a) * y) - y) / (Rate
 * tau2)
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
This function only works by using quantities that are in the function environmen
t (here, DS11, a, tau1, Rate, tau2).
 A better structure would provide those as additional arguments to the function,
 but that will require restructuring the 
\begin_inset Quotes eld
\end_inset

rk4.integrate( )
\begin_inset Quotes erd
\end_inset

 function as well.
 The specific function that provides the derivative is defined each time
 an integration is performed, usually just before the integration, but the
 practice of referencing the calling environment might lead to problems
 for someone wanting to extend or revise the program embedded with this
 document in the 
\begin_inset Quotes eld
\end_inset

.Rnw
\begin_inset Quotes erd
\end_inset

 file.
\end_layout

\begin_layout Section
Comments on the differential equations and their solution
\end_layout

\begin_layout Standard
Section 2 of the TN presents the steady-state solution to the differential
 equations (TN Eq.
\begin_inset space ~
\end_inset

(3) and (4)) for a sinusoidal input, as TN Eq.
\begin_inset space ~
\end_inset

(5)–(8), and determines the frequency-dependent 
\begin_inset Quotes eld
\end_inset

transfer function
\begin_inset Quotes erd
\end_inset

 (ratio of output to input for sinusoidal input) from that solution.
 The solution was obtained using Laplace transforms, which may not be familiar
 to some potential users of this work, so extensive documentation of the
 approach is included in this section of the workflow document.
 Also included is a direct verification of the solution obtained by substituting
 into the governing differential equations and showing that those equations
 are satisfied.
 This detail did not seem appropriate to include in the TN but it may be
 of interest to someone wanting to replicate or extend this work.
 In particular, it may be useful if additional terms are needed to describe
 the time response.
\end_layout

\begin_layout Subsection
Re: Section 2.1
\end_layout

\begin_layout Standard
Consider a sine-wave input 
\begin_inset Formula $T(t)=\sin\omega t$
\end_inset

 representing the normalized actual history of the air temperature.
 The temperature of the sensor and that of the support must both also be
 sine waves, possibly of different amplitudes and phases: 
\begin_inset Formula $T_{m}(t)=c\sin(\omega t+\phi)$
\end_inset

 and 
\begin_inset Formula $T_{s}(t)=b\sin(\omega t+\zeta)$
\end_inset

.
 
\end_layout

\begin_layout Standard
The equation for the support temperature
\begin_inset Formula $T_{s}(t)$
\end_inset

, given by TN Eq.
\begin_inset space ~
\end_inset

(3) and repeated here, is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{dT_{s}(t)}{dt}=\frac{(T(t)-T_{s}(t)}{\tau_{2}}
\]

\end_inset

Taking Laplace transforms gives 
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
s\tau_{2}\mathcal{L}(T_{s})-\tau_{2}T_{s}(0)=\frac{\omega}{s^{2}+\omega^{2}}-\mathcal{L}(T_{s})\label{eq:LTsupport}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{align*}
\mathcal{L}(T_{s}) & =\frac{T_{s}(0)+\frac{1}{\tau_{2}}\frac{\omega}{s^{2}+\omega^{2}}}{\frac{1}{\tau_{2}}+s}\\
= & \frac{T_{s}(0)}{\frac{1}{\tau_{2}}+s}+\frac{\omega}{\tau_{2}}\frac{1}{\left(\frac{1}{\tau_{2}}+s\right)(s+i\omega)(s-i\omega)}
\end{align*}

\end_inset

Expanding the last term in partial fractions leads to:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
\frac{T_{s}(0)}{\frac{1}{\tau_{2}}+s}+\frac{\omega}{\tau_{2}}\left(\frac{c_{1}}{\frac{1}{\tau_{2}}+s}+\frac{c_{2}}{s+i\omega}+\frac{c_{3}}{s-i\omega}\right)
\]

\end_inset

where, from 
\begin_inset CommandInset citation
LatexCommand citet
key "kreyszig1963advanced"
literal "false"

\end_inset

 p.
 219, and with 
\begin_inset Formula $\tau=\tau_{2}$
\end_inset

 so the equations can be reused later:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
c_{1}=\frac{1}{\omega^{2}+(1/\tau)^{2}}=\frac{\tau^{2}}{1+\omega^{2}\tau^{2}}\label{eq:c1Eq}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
c_{2}=-\frac{1}{2i\omega(1/\tau-i\omega)}=\frac{\tau(i-\omega\tau)}{2\omega(1+\omega^{2}\tau^{2})}\label{eq:c2Eq}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
c_{3}=\frac{\tau(-i-\omega\tau)}{2\omega(1+\omega^{2}\tau^{2})}\label{eq:c3Eq}
\end{equation}

\end_inset

The solution is then obtained by taking the inverse Laplace transform:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
T_{s}(t)=T_{s}(0)e^{-t/\tau_{2}}+\left(\frac{\omega\tau_{2}}{1+\omega^{2}\tau_{2}^{2}}e^{-t/\tau_{2}}+\frac{(i-\omega\tau_{2})}{2(1+\omega^{2}\tau_{2}^{2})}e^{-i\omega t}+\frac{(-i-\omega\tau_{2})}{2(1+\omega^{2}\tau_{2}^{2})}e^{i\omega t}\right)\label{eq:solnTs}
\end{equation}

\end_inset

After initial transient response decays, the long-time solution is then
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
T_{s}(t)=\frac{1}{(1+\omega^{2}\tau_{2}^{2})}\left(-\omega\tau_{2}\cos\omega t+\sin\omega t\right)=b\sin(\omega t+\zeta)=b(\cos\zeta\sin\omega t+\sin\zeta\cos\omega t)\label{eq:TsLongTerm}
\end{equation}

\end_inset

which leads to the solution for 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $\zeta$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
b\cos\zeta=-\frac{1}{1+\omega^{2}\tau_{2}^{2}}
\]

\end_inset


\begin_inset Formula 
\[
b\sin\zeta=\frac{-\omega\tau_{2}}{1+\omega^{2}\tau_{2}^{2}}
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\tan\zeta=-\omega\tau_{2}\label{eq:tanzeta}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
b=\frac{1}{1+\omega^{2}\tau_{2}^{2}}\sqrt{(1+\omega^{2}\tau_{2}^{2})}=\frac{1}{\sqrt{1+\omega^{2}\tau_{2}^{2}}}\label{eq:bFromLT}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This illustrates the use of the Laplace-transform solution that will next
 be applied to (4) from the TN.
 A specific input, 
\begin_inset Formula $T(t)=\sin\omega t$
\end_inset

, has been used, but a more general solution would replace the Laplace transform
 of this input (
\begin_inset Formula $\mathcal{L}(T)=\omega/(s^{2}+\omega^{2})$
\end_inset

) with the general form 
\begin_inset Formula $\mathcal{L}(T)$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LTsupport"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 The transfer function in Laplace-transform notation then is the ratio of
 the Laplace transform of the output to that of the input, with initial-conditio
n-transients neglected; in this case the transfer function is 
\begin_inset Formula $G(s)=1/(1+s\tau_{2})$
\end_inset

.
 For a general input function, this leads to the Laplace transform of the
 response via 
\begin_inset Formula $\mathcal{L}(T_{s})=G(s)\mathcal{L}(T)$
\end_inset

, so the inverse transform of this equation will specify the solution for
 a general input.
 For example, for 
\begin_inset Formula $T=A\cos\omega t$
\end_inset

 with Laplace transform 
\begin_inset Formula $\mathcal{L}(T)=As/(s^{2}+\omega^{2})$
\end_inset

, 
\begin_inset Formula $\mathcal{L}(T_{s})=As/\left((1+s\tau_{2})(s+i\omega)(s-i\omega)\right)$
\end_inset

 or
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
\frac{\tau_{2}}{A}\mathcal{L}(T_{s})=s\left(\frac{c_{1}}{s+1/\tau_{2}}+\frac{c_{2}}{s+i\omega}+\frac{c_{3}}{s-i\omega}\right)
\]

\end_inset

with coefficients 
\begin_inset Formula $c_{i}$
\end_inset

 as found above.
 Apart from an initial decaying exponential, the solution is obtained from
 the inverse Laplace transform: 
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{align*}
T_{s}(t) & =A\left(-\frac{i\omega(i-\omega\tau_{2})}{2\omega(1+\omega^{2}\tau_{2}^{2})}e^{-i\omega t}+\frac{i\omega(-i-\omega\tau_{2})}{2\omega(1+\omega^{2}\tau_{2}^{2})}e^{i\omega t}\right)=\left(\frac{A}{1+\omega^{2}\tau_{2}^{2}}\right)\left(\cos\omega t-\omega\tau_{2}\sin\omega t\right)\\
= & \frac{A}{1+\omega^{2}\tau_{2}^{2}}\cos(\omega t+\zeta)
\end{align*}

\end_inset

where the gain is 
\begin_inset Formula $1/(1+\omega^{2}\tau_{2}^{2})$
\end_inset

 and the phase shift is 
\begin_inset Formula $\tan\zeta=\omega t$
\end_inset

.
 
\end_layout

\begin_layout Standard
As a check, the solution can also be obtained as follows:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
b\omega\cos(\omega t+\zeta)=\frac{\sin\omega t-b\sin(\omega t+\zeta)}{\tau_{2}}
\]

\end_inset


\begin_inset Formula 
\[
b\omega\tau_{2}[\cos\omega t\cos\zeta-\sin\omega t\sin\zeta]=\sin\omega t-b[\sin\omega t\cos\zeta+\cos\omega t\sin\zeta]
\]

\end_inset

Rearranging:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
[1-b\cos\zeta+b\omega\tau_{2}\sin\zeta]\sin\omega t=b[\sin\zeta+\omega\tau_{2}\cos\zeta]\cos\omega t
\]

\end_inset

This can only be valid if each term in square brackets is zero.
 The right-side term leads to a simple result for the phase:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
\tan\zeta=-\omega\tau_{2}\label{eq:tau1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The amplitude-ratio 
\begin_inset Formula $b$
\end_inset

 then follows from the left-side term:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
b=\frac{1}{(\tan\zeta\sin\zeta+\cos\zeta)}=\cos\zeta=1/\sqrt{1+\omega^{2}\tau_{2}^{2}}\label{eq:b-1}
\end{equation}

\end_inset

The support temperature also can be written as follows: 
\begin_inset Formula $T_{s}(t)=b(\cos\zeta\sin\omega t+\sin\zeta\cos\omega t).$
\end_inset


\end_layout

\begin_layout Standard
Once 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $\zeta$
\end_inset

 are known functions of frequency, they can be used in (4) from the TN to
 find the amplitude 
\begin_inset Formula $c$
\end_inset

 and phase 
\begin_inset Formula $\phi$
\end_inset

 of the response 
\begin_inset Formula $T_{m}(t)$
\end_inset

.
 
\end_layout

\begin_layout Standard
The same approach can then be applied to the equation for the sensor response
 
\begin_inset Formula $T_{m}(t)$
\end_inset

 in response to a real temperature 
\begin_inset Formula $T(t)=\sin\omega t.$
\end_inset

 The Laplace transform of TN Eq.
 (4) leads to
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
\tau_{1}(s\mathcal{L}(T_{m})-T_{m}(0))=a\mathcal{L}(T)+(1-a)b(\cos\zeta\frac{\omega}{s^{2}+\omega^{2}}+\sin\zeta\frac{s}{s^{2}+\omega^{2}})-\mathcal{L}(T_{m})\label{eq:subsidiaryEq}
\end{equation}

\end_inset


\begin_inset Formula 
\[
\tau_{1}(s\mathcal{L}(T_{m})-T_{m}(0))=\mathcal{L}(T)\left(a+(1-a)\frac{\omega}{\tau_{2}}\frac{1}{\left(\frac{1}{\tau_{2}}+s\right)(s+i\omega)(s-i\omega)}\right)-\mathcal{L}(T_{m})
\]

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
\mathcal{L}(T_{m})=\frac{T_{m}(0)+\left(a+(1-a)\frac{\omega}{\tau_{2}}\frac{1}{\left(\frac{1}{\tau_{2}}+s\right)(s+i\omega)(s-i\omega)}\right)\mathcal{L}(T)}{\tau_{1}(s+1/\tau_{1})}\label{eq:SEform2}
\end{equation}

\end_inset

The ratio of the output to input transform, if the constant term is dropped,
 is
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
\mathcal{H}=\frac{a(s+\frac{1}{\tau_{2}})(s+i\omega)(s-i\omega)+(1-a)\omega/\tau_{2}}{\tau_{1}(s+1/\tau_{1})(s+1/\tau_{2})(s+i\omega)(s-i\omega)}=\frac{a}{\tau_{1}}\frac{1}{(s+\frac{1}{\tau_{1}})}+\frac{(1-a)\omega}{\tau_{1}\tau_{2}(s+1/\tau_{1})(s+1/\tau_{2})(s+i\omega)(s-i\omega)}
\]

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
XXX ?? how to use this or express it in terms of a rational fraction? Would
 like to get guidance regarding specifications for a filter to apply to
 both 
\begin_inset Formula $Q$
\end_inset

 and 
\begin_inset Formula $T$
\end_inset

.
 XXXXXXXXXXXXXXXXXXXXX
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The inverse Laplace transform then leads to the general solution for 
\begin_inset Formula $T_{m}(T)$
\end_inset

 for sine-wave input:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Here the notation 
\begin_inset Formula $\mathcal{L}^{-1}()$
\end_inset

 denotes the inverse Laplace transform.
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{align}
T_{m}(t) & =\frac{T_{m}(0)}{\tau_{1}}e^{-t/\tau_{1}}\label{eq:LTsolution}\\
+ & \mathcal{L}^{-1}\left(\frac{a+(1-a)b\cos\zeta}{\tau_{1}}\frac{\omega}{(s+1/\tau_{1})(s^{2}+\omega^{2})}\right)\\
+ & \mathcal{L}^{-1}\left(\frac{(1-a)b\sin\zeta}{\tau_{1}}\frac{s}{(s+1/\tau_{1})(s^{2}+\omega^{2})}\right)
\end{align}

\end_inset

Use partial fractions to write, following 
\begin_inset CommandInset citation
LatexCommand citet
key "kreyszig1963advanced"
literal "false"

\end_inset

 p.
 219,
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{align}
\frac{1}{(s+1/\tau_{1})(s^{2}+\omega^{2})} & =\frac{c_{1}}{s+1/\tau_{1}}+\frac{c_{2}}{s+i\omega}+\frac{c_{3}}{s-i\omega}\label{eq:PartialFractions}
\end{align}

\end_inset

The coefficients 
\begin_inset Formula $c_{i}$
\end_inset

 are the same as found previously, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:c1Eq"
plural "false"
caps "false"
noprefix "false"

\end_inset

 to 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:c3Eq"
plural "false"
caps "false"
noprefix "false"

\end_inset

, except now 
\begin_inset Formula $\tau=\tau_{1}$
\end_inset

.
 The Laplace-transform solutions for the three terms in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:PartialFractions"
plural "false"
caps "false"
noprefix "false"

\end_inset

, omitting the coefficients, are respectively 
\begin_inset Formula $e^{-t/\tau_{1}}$
\end_inset

, 
\begin_inset Formula $e^{-i\omega t}$
\end_inset

 and 
\begin_inset Formula $e^{i\omega t}$
\end_inset

.
 The three terms arising from representing the last term in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LTsolution"
plural "false"
caps "false"
noprefix "false"

\end_inset

 by partial fractions are the same as the previous term but multiplied by
 
\begin_inset Formula $s$
\end_inset

 instead of 
\begin_inset Formula $\omega$
\end_inset

.
 Because multiplying the Laplace transform by 
\begin_inset Formula $s$
\end_inset

 corresponds to differentiation, differentiating the three terms gives 
\begin_inset Formula $-(1/\tau_{1})e^{-t/\tau_{1}}$
\end_inset

, 
\begin_inset Formula $-i\omega e^{-i\omega t}$
\end_inset

 and 
\begin_inset Formula $i\omega e^{i\omega t}$
\end_inset

, apart from delta functions at 
\begin_inset Formula $t=0$
\end_inset

 that integrate to constants.
 Then the solution, without the exponentially decaying terms, is
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{align}
T_{m}(t)= & \frac{a+(1-a)b\cos\zeta}{\tau_{1}}\omega\left(c_{2}e^{-i\omega t}+c_{3}e^{i\omega t}\right)+\frac{(1-a)b\sin\zeta}{\tau_{1}}\left(-c_{2}i\omega e^{-i\omega t}+c_{3}i\omega e^{i\omega t}\right)\label{eq:FullSoln}
\end{align}

\end_inset

This can be transformed to sine and cosine factors using the relationships
 
\begin_inset Formula $e^{i\omega t}=\cos\omega t+i\sin\omega t$
\end_inset

 and 
\begin_inset Formula $e^{-i\omega t}=\cos\omega t-i\sin\omega t$
\end_inset

:
\begin_inset Newline newline
\end_inset

T_m 
\begin_inset Formula 
\[
T_{m}(t)=\left(\frac{a+(1-a)b\cos\zeta}{1}\right)\left\{ \left(\frac{(i-\omega\tau)}{2(1+\omega^{2}\tau^{2})}\right)(\cos\omega t-i\sin\omega t)+\left(\frac{(-i-\omega\tau)}{2(1+\omega^{2}\tau^{2})}\right)(\cos\omega t+i\sin\omega t)\right\} 
\]

\end_inset


\begin_inset Formula 
\[
+\left(\frac{(1-a)b\sin\zeta}{1}\right)i\left\{ \left(\frac{-(i-\omega\tau)}{2(1+\omega^{2}\tau^{2})}\right)(\cos\omega t-i\sin\omega t)+\left(\frac{(-i-\omega\tau)}{2(1+\omega^{2}\tau^{2})}\right)(\cos\omega t+i\sin\omega t)\right\} 
\]

\end_inset


\begin_inset Formula 
\[
=C_{1}\cos\omega t+C_{2}\sin\omega t
\]

\end_inset

where
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
C_{1}=(a+(1-a)b\cos\zeta)\left(\frac{-\omega\tau}{1+\omega^{2}\tau^{2}}\right)+(1-a)b\sin\zeta\left(\frac{1}{1+\omega^{2}\tau^{2}}\right)
\]

\end_inset


\begin_inset Formula 
\[
C_{2}=(a+(1-a)b\cos\zeta)\left(\frac{1}{1+\omega^{2}\tau^{2}}\right)+(1-a)b\sin\zeta\left(\frac{\omega\tau}{1+\omega^{2}\tau^{2}}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
In this equation, 
\begin_inset Formula $C_{1}$
\end_inset

, 
\begin_inset Formula $C_{2}$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $\zeta$
\end_inset

 are all functions of frequency.
 It is useful to convert this solution into the form 
\begin_inset Formula $T_{m}(t)=c(\omega)\sin(\omega t+\phi(\omega))$
\end_inset

, so that the functions 
\begin_inset Formula $c(\omega)$
\end_inset

 and 
\begin_inset Formula $\phi(\omega)$
\end_inset

 represent the amplitude and phase of the response to an input of 
\begin_inset Formula $\sin\omega t$
\end_inset

.
 This then will characterize the transfer function.
 The result is that 
\begin_inset Formula $c(f)\sin(2\pi ft+\phi(f))=c(f)\left(\sin2\pi ft\cos\phi(f)+\cos2\pi ft\sin\phi(f)\right)$
\end_inset

 so 
\begin_inset Formula $C_{1}=c\sin\phi$
\end_inset

 and 
\begin_inset Formula $C_{2}=c\cos\phi$
\end_inset

.
 Thus, the amplitude and phase of the transfer function defining the response
 to sine waves of various frequencies are given by
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
c=\sqrt{C_{1}^{2}+C_{2}^{2}}\label{eq:amplitude}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\phi=\arctan(C_{1}/C_{2})\label{eq:phase}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The unheated Rosemount 102A2EL sensor can be represented by the parameters
 called 
\begin_inset Quotes eld
\end_inset

set 1
\begin_inset Quotes erd
\end_inset

 (
\begin_inset Formula $a=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(Param$a, 2)}
\end_layout

\end_inset

, 
\begin_inset Formula $\tau_{1}=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(Param$tau1, 2)}
\end_layout

\end_inset

, 
\begin_inset Formula $\tau_{2}=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(Param$tau2, 2)}
\end_layout

\end_inset

), as discussed in Section 3.
 Figure
\begin_inset space ~
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{fig:AppxFig}
\end_layout

\end_inset

 shows the resulting frequency-dependent transfer function for sine-wave
 input.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<AppxFig, include=TRUE, echo=FALSE, fig.cap='The amplitude and phase for
 the response of the Rosemount 102E4AL temperature sensor to a signal of
 the form $
\backslash

\backslash
sin(2
\backslash

\backslash
pi$$ft$) where $f$ is the frequency, for the Laplace-transform solution
 and for a numerical solution of simultaneous equations.'>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

a <- Param$a
\end_layout

\begin_layout Plain Layout

tau1 <- Param$tau1
\end_layout

\begin_layout Plain Layout

tau2 <- Param$tau2
\end_layout

\begin_layout Plain Layout

frq <- seq(0.01, 25, by = 0.01)
\end_layout

\begin_layout Plain Layout

zeta <- -atan(2 * pi * frq * tau2)
\end_layout

\begin_layout Plain Layout

b <- cos(zeta)
\end_layout

\begin_layout Plain Layout

Phi <- rep(0, length(frq))
\end_layout

\begin_layout Plain Layout

H <- rep(0, length(frq))
\end_layout

\begin_layout Plain Layout

f2solve <- function (x) {
\end_layout

\begin_layout Plain Layout

  # x[1]=phi, x[2]=cf
\end_layout

\begin_layout Plain Layout

  phi <- x[1]
\end_layout

\begin_layout Plain Layout

  cf <- x[2]
\end_layout

\begin_layout Plain Layout

  v <- x
\end_layout

\begin_layout Plain Layout

  v[1] <-
\end_layout

\begin_layout Plain Layout

    a + (1 - a) * bA * cos(zetaA) + cf * tau1 * 2 * pi * frqA * sin(phi)
 -
\end_layout

\begin_layout Plain Layout

    cf * cos(phi)
\end_layout

\begin_layout Plain Layout

  v[2] <- cf * (tau1 * 2 * pi * frqA * cos(phi) + sin(phi)) - (1 - a) *
\end_layout

\begin_layout Plain Layout

    bA * sin(zetaA)
\end_layout

\begin_layout Plain Layout

  return(v)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

for (i in 1:length(frq)) {
\end_layout

\begin_layout Plain Layout

  xg <- c(0.1, 0.5)
\end_layout

\begin_layout Plain Layout

  bA <- b[i]
\end_layout

\begin_layout Plain Layout

  zetaA <- zeta[i]
\end_layout

\begin_layout Plain Layout

  frqA <- frq[i]
\end_layout

\begin_layout Plain Layout

  r <- nleqslv(xg, f2solve)
\end_layout

\begin_layout Plain Layout

  Phi[i] <- r$x[1]
\end_layout

\begin_layout Plain Layout

  H[i] <- r$x[2]
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

Phi <- Phi * 180 / pi
\end_layout

\begin_layout Plain Layout

dfAP <- data.frame('Time' = frq,
\end_layout

\begin_layout Plain Layout

                   'Amplitude' = H,
\end_layout

\begin_layout Plain Layout

                   'Phase' = Phi)
\end_layout

\begin_layout Plain Layout

## Use the Laplace-transform solution
\end_layout

\begin_layout Plain Layout

C1 <- 1 / (1 + 4 * pi ^ 2 * frq ^ 2 * tau1 ^ 2) *
\end_layout

\begin_layout Plain Layout

  (-(a + (1 - a) * b * cos(zeta)) * 2 * pi * frq * tau1 +
\end_layout

\begin_layout Plain Layout

     (1 - a) * b * sin(zeta))
\end_layout

\begin_layout Plain Layout

C2 <- 1 / (1 + 4 * pi ^ 2 * frq ^ 2 * tau1 ^ 2) *
\end_layout

\begin_layout Plain Layout

  ((a + (1 - a) * b * cos(zeta)) +
\end_layout

\begin_layout Plain Layout

     (1 - a) * b * sin(zeta) * 2 * pi * frq * tau1)
\end_layout

\begin_layout Plain Layout

cTF <- sqrt(C1 ^ 2 + C2 ^ 2)
\end_layout

\begin_layout Plain Layout

phiTF <- atan2(C1, C2) * 180 / pi
\end_layout

\begin_layout Plain Layout

dfAP <-
\end_layout

\begin_layout Plain Layout

  data.frame(
\end_layout

\begin_layout Plain Layout

    'Time' = frq,
\end_layout

\begin_layout Plain Layout

    'Amp1' = cTF,
\end_layout

\begin_layout Plain Layout

    'Amp2' = H,
\end_layout

\begin_layout Plain Layout

    'Phase1' = phiTF,
\end_layout

\begin_layout Plain Layout

    'Phase2' = Phi
\end_layout

\begin_layout Plain Layout

  )
\end_layout

\begin_layout Plain Layout

t <- (0:(125 * 600)) / 125
\end_layout

\begin_layout Plain Layout

mx <- vector()
\end_layout

\begin_layout Plain Layout

for (f in c(1, 3, 10)) {
\end_layout

\begin_layout Plain Layout

  S <- sin(2 * pi * f * t)
\end_layout

\begin_layout Plain Layout

  TS <- rep(0, length(S))
\end_layout

\begin_layout Plain Layout

  for (i in 2:length(S)) {
\end_layout

\begin_layout Plain Layout

    TS[i] <- TS[i - 1] + (S[i] - TS[i - 1]) / (125 * tau2)
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

  TM <- TS
\end_layout

\begin_layout Plain Layout

  for (i in 2:length(S)) {
\end_layout

\begin_layout Plain Layout

    TM[i] <- TM[i - 1] + (a * S[i] + (1 - a) * TS[i] - TM[i - 1]) / (125
 * tau1)
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

  mx <- c(mx, max(TM[5001:6000]))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

g <-
\end_layout

\begin_layout Plain Layout

  ggplotWAC(
\end_layout

\begin_layout Plain Layout

    dfAP,
\end_layout

\begin_layout Plain Layout

    panels = 2,
\end_layout

\begin_layout Plain Layout

    labelP = c('       Amplitude', '    Phase [degrees]'),
\end_layout

\begin_layout Plain Layout

    labelL = c('Laplace Transform', 'numerical'),
\end_layout

\begin_layout Plain Layout

    lty = c(1, 2),
\end_layout

\begin_layout Plain Layout

    col = c('blue', 'darkorange')
\end_layout

\begin_layout Plain Layout

  )
\end_layout

\begin_layout Plain Layout

g <- g + xlab('frequency [Hz]') + ylab('transfer function')
\end_layout

\begin_layout Plain Layout

g <-
\end_layout

\begin_layout Plain Layout

  g + scale_x_log10(
\end_layout

\begin_layout Plain Layout

    breaks = trans_breaks("log10", function(x)
\end_layout

\begin_layout Plain Layout

      10 ^ x, n = 4),
\end_layout

\begin_layout Plain Layout

    labels = trans_format("log10", math_format(expr = 10 ^ .x))
\end_layout

\begin_layout Plain Layout

  ) + xlab('frequency [Hz]')
\end_layout

\begin_layout Plain Layout

g <- g + annotation_logticks(sides = 'tb')
\end_layout

\begin_layout Plain Layout

g + theme_WAC(1) + theme(legend.position = c(0.75, 0.92))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As a check for the preceding derivation, an alternate solution was obtained
 as follows.
 Again isolate the factors multiplying 
\begin_inset Formula $\sin\omega t$
\end_inset

 and 
\begin_inset Formula $\cos\omega t:$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{align*}
c\omega\tau_{1}[\cos\omega t\cos\phi-\sin\omega t\sin\phi]
\end{align*}

\end_inset


\begin_inset Formula 
\[
=a\sin\omega t+(1-a)b(\cos\zeta\sin\omega t+\sin\zeta\cos\omega t)-c[\cos\phi\sin\omega t+\sin\phi\cos\omega t]
\]

\end_inset


\begin_inset Newline newline
\end_inset

Gathering terms:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{align*}
[c\omega\tau_{1}\sin\phi+a+(1-a)b\cos\zeta-c\cos\phi]\sin\omega t
\end{align*}

\end_inset


\begin_inset Formula 
\[
=[c\omega\tau_{1}\cos\phi-(1-a)b\sin\zeta+c\sin\phi]\cos\omega t
\]

\end_inset

The simultaneous equations to be solved are then obtained by setting the
 factors in square brackets to zero:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
[c\omega\tau_{1}\sin\phi+a+(1-a)b\cos\zeta-c\cos\phi]=0\label{eq:seq1-1}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
[c\omega\tau_{1}\cos\phi-(1-a)b\sin\zeta+c\sin\phi]=0\label{eq:seq2-1}
\end{equation}

\end_inset

Because it is assumed that 
\begin_inset Formula $a$
\end_inset

 is known and because 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $\zeta$
\end_inset

 are known from the solution above, the two unknowns for which 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:seq1-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:seq2-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 must be solved are 
\begin_inset Formula $c$
\end_inset

 and 
\begin_inset Formula $\phi$
\end_inset

, giving the amplitude and phase of the response to the input.
 They must be solved independently at each frequency because all the parameters
 {
\begin_inset Formula $b,\,\zeta,\,c,\,\phi$
\end_inset

} are functions of frequency.
 R code for this solution using the R package 
\begin_inset Quotes eld
\end_inset

nleqslv
\begin_inset Quotes erd
\end_inset

 is included in the 
\begin_inset Quotes eld
\end_inset

Rnw
\begin_inset Quotes erd
\end_inset

-format file used to generate this memo.
 The results of the two methods of solution are the same to nearly the numerical
 precision of the software.
\end_layout

\begin_layout Standard
One final check was to simulate sine waves of various frequencies and then
 use a numerical solution of TN Eq.
\begin_inset space ~
\end_inset

(4) to calculate the expected measurement.
 The results were consistent with Fig.
\begin_inset space ~
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{fig:AppxFig}
\end_layout

\end_inset

; for example, the 1
\begin_inset space ~
\end_inset

Hz simulation agreed in amplitude to within 1% and in phase within 
\begin_inset Formula $1^{\circ}$
\end_inset

 even for a simple Euler-method integration.
\end_layout

\begin_layout Standard
The following is verification of the solution by substituting into the different
ial equations.
 For (3), 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
b\omega\tau_{2}\cos(\omega t+\zeta)\stackrel{?}{=}\sin(\omega t)-b\sin(\omega t+\zeta)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
b\omega\tau_{2}(\cos\omega t\cos\zeta-\sin\omega t\sin\zeta)\stackrel{?}{=}\sin(\omega t)-b(\sin\omega t\cos\zeta+\sin\zeta\cos\omega t)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\omega t(b\omega\tau_{2}\cos\zeta+b\sin\zeta)\stackrel{?}{=}\sin(\omega t)(b\omega\tau_{2}\sin\zeta+1-b\cos\zeta)
\]

\end_inset


\end_layout

\begin_layout Standard
The asserted solution gives zero for the coefficient multiplying 
\begin_inset Formula $\cos\omega t$
\end_inset

 on the left side.
 On the right side, the coefficient multiplying 
\begin_inset Formula $\sin\omega t$
\end_inset

 is 
\begin_inset Formula $1-b\cos\zeta(\omega^{2}\tau_{2}^{2}+1)$
\end_inset

 or, using 
\begin_inset Formula $\cos\zeta=1/\sqrt{1+\tan^{2}\zeta}=1/\sqrt{1+\omega^{2}\tau_{2}^{2}}$
\end_inset

, 
\begin_inset Formula $1-b\sqrt{1+\omega^{2}\tau_{2}^{2}}=0$
\end_inset

 so the equality is satisfied.
\end_layout

\begin_layout Standard
For (4), the approach is similar:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
-C_{1}\omega\tau_{1}\sin\omega t+C_{2}\omega\tau_{1}\cos\omega t
\]

\end_inset


\begin_inset Formula 
\[
\stackrel{?}{=}\left\{ a\sin\omega t+(1-a)b(\sin\omega t\cos\zeta+\cos\omega t\sin\zeta)\right\} -C_{1}\cos\omega t-C_{2}\sin\omega t
\]

\end_inset


\end_layout

\begin_layout Standard
Again gathering coefficients multiplying 
\begin_inset Formula $\sin\omega t$
\end_inset

 and 
\begin_inset Formula $\cos\omega t$
\end_inset

 separately:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\cos\omega t\left(C_{2}\omega\tau_{1}+C_{1}-(1-a)b\sin\zeta\right)\stackrel{?}{=}\sin\omega t\left(a+(1-a)b\cos\zeta+C_{1}\omega\tau_{1}-C_{2}\right)
\]

\end_inset

Substituting the solutions for 
\begin_inset Formula $C_{1}$
\end_inset

, 
\begin_inset Formula $C_{2}$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $\zeta$
\end_inset

 gives, for the left side coefficient, after dividing by 
\begin_inset Formula $b\cos\zeta$
\end_inset

,
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
\left((\frac{a\sqrt{1+\omega^{2}\tau_{2}^{2}}}{\cos\zeta}+(1-a))\left(\frac{1}{1+\omega^{2}\tau_{1}^{2}}\right)-(1-a)\omega\tau_{2}\left(\frac{\omega\tau_{1}}{1+\omega^{2}\tau_{1}^{2}}\right)\right)\omega\tau_{1}
\]

\end_inset


\begin_inset Formula 
\[
+\left((\frac{a\sqrt{1+\omega^{2}\tau_{2}^{2}}}{\cos\zeta}+(1-a))\left(\frac{-\omega\tau_{1}}{1+\omega^{2}\tau_{1}^{2}}\right)-(1-a)\omega\tau_{2}\left(\frac{1}{1+\omega^{2}\tau_{1}^{2}}\right)\right)
\]

\end_inset


\begin_inset Formula 
\[
+(1-a)\omega\tau_{2}
\]

\end_inset

which is zero.
 The right-side coefficient becomes, after similar division,
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
\frac{a\sqrt{1+\omega^{2}\tau_{2}^{2}}}{\cos\zeta}+(1-a)+\left((\frac{a\sqrt{(1+\omega^{2}\tau_{2}^{2}}}{\cos\zeta}+(1-a))\left(\frac{-\omega\tau_{1}}{1+\omega^{2}\tau_{1}^{2}}\right)-(1-a)\omega\tau_{2}\left(\frac{1}{1+\omega^{2}\tau_{1}^{2}}\right)\right)\omega\tau_{1}
\]

\end_inset


\begin_inset Formula 
\[
-\left((\frac{a\sqrt{(1+\omega^{2}\tau_{2}^{2}}}{\cos\zeta}+(1-a))\left(\frac{1}{1+\omega^{2}\tau_{1}^{2}}\right)-(1-a)\omega\tau_{2}\left(\frac{\omega\tau_{1}}{1+\omega^{2}\tau_{1}^{2}}\right)\right)
\]

\end_inset


\begin_inset Formula 
\[
=\frac{a\sqrt{1+\omega^{2}\tau_{2}^{2}}}{\cos\zeta}+(1-a)\left(1-\frac{1+\omega^{2}\tau_{1}^{2}}{1+\omega^{2}\tau_{1}^{2}}\right)-\frac{a\sqrt{(1+\omega^{2}\tau_{2}^{2}}}{\cos\zeta}\left(\frac{1+\omega^{2}\tau_{1}^{2}}{1+\omega^{2}\tau_{1}^{2}}\right)
\]

\end_inset

which is also zero.
 These results then verify that the differential equation is satisfied for
 the case where the true signal is a continuous sine wave.
\end_layout

\begin_layout Subsection
Re: Section 2.2 (the transfer function):
\end_layout

\begin_layout Standard
The solution specifies the amplitude and phase of the response to a unit-amplitu
de sinusoidal input, and so specifies the magnitude and phase of the transfer
 function.
 This section uses assumed values for the response parameters (
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $\tau_{1}$
\end_inset

 and 
\begin_inset Formula $\tau_{2}$
\end_inset

) as examples because those parameters have not been determined yet, but
 the values are those that result from subsequent analysis.
 The function 
\begin_inset Quotes eld
\end_inset

LTphase(f, P)
\begin_inset Quotes erd
\end_inset

 was constructed to represent the solution so that it could be used throughout
 the TN\SpecialChar endofsentence
 Its arguments are the frequency 
\begin_inset Quotes eld
\end_inset

f
\begin_inset Quotes erd
\end_inset

, which can be a vector, and the values of the parameters, provided as 
\begin_inset Quotes eld
\end_inset

P
\begin_inset Quotes erd
\end_inset

 which should be a list with named components 
\begin_inset Quotes eld
\end_inset

a
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

tau1
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

tau2.
\begin_inset Quotes erd
\end_inset

 The function returns a list with two component vectors representing the
 amplitude and phase at the specified frequencies.
\end_layout

\begin_layout Standard
The function 
\begin_inset Quotes eld
\end_inset

LTphase()
\begin_inset Quotes erd
\end_inset

 accepts a vector argument for the frequency and returns vector arguments
 for the gain (or amplitude ratio) and phase.
 It is useful for the 
\begin_inset Quotes eld
\end_inset

LTphase()
\begin_inset Quotes erd
\end_inset

 function to be able to accept a frequency of zero because conventional
 FFT results in R have the first coefficient equal to the constant for zero
 frequency.
 The function appropriately returns gain = 1 and phase = 0 for zero frequency.
 
\end_layout

\begin_layout Standard
The two-component faceted plot of the transfer function (TN Fig.
\begin_inset space ~
\end_inset

1) is generated by 
\begin_inset Quotes eld
\end_inset

Ranadu::ggplotWAC()
\begin_inset Quotes erd
\end_inset

, a plot function based on the 
\begin_inset Quotes eld
\end_inset

ggplot2
\begin_inset Quotes erd
\end_inset

 package (
\begin_inset CommandInset citation
LatexCommand citet
key "wickham2009"
literal "false"

\end_inset

) that combines the plots of amplitude (or gain) and phase of the transfer
 function into one plot.
 See 
\begin_inset Quotes eld
\end_inset

help(ggplotWAC)
\begin_inset Quotes erd
\end_inset

 in R for information on the use of this routine to generate plots with
 multiple panels like this, and the 
\begin_inset Quotes eld
\end_inset

ggplot2
\begin_inset Quotes erd
\end_inset

 book in the reference list for complete information on using that package.
 All the plots of transfer functions in the TN rely on those routines and
 follow the same model used here.
\end_layout

\begin_layout Standard
At the end of TN Sect.
\begin_inset space ~
\end_inset

2.2 there is a brief discussion of how the transfer function can be used
 to correct the measurements to compensate for the time response of the
 sensor.
 This is included here as a brief reference because the correction procedure
 is used in some subsequent sections before it is developed and documented
 in more detail in TN Sect.
\begin_inset space ~
\end_inset

5.3.
\end_layout

\begin_layout Section
Comments on TN Sect.
\begin_inset space ~
\end_inset

3
\end_layout

\begin_layout Subsection
TN Sect.
\begin_inset space ~
\end_inset

3.1 (Response to dynamic heating)
\end_layout

\begin_layout Subsubsection
The unheated Rosemount 102E4AL sensor
\end_layout

\begin_layout Standard
TN Sect.
\begin_inset space ~
\end_inset

3 determines the response parameters for various sensors by observing the
 response to fluctuations in dynamic heating.
 The first equation (TN Eq.
\begin_inset space ~
\end_inset

(9)) is so complicated because the simple version (
\begin_inset Formula $\alpha_{r}V^{2}/(2C_{p})$
\end_inset

) uses the measured true airspeed (
\begin_inset Formula $V$
\end_inset

) and the standard calculation of that involves the ambient temperature.
 If there are errors in the measurement of ambient temperature, they enter
 the estimate of 
\begin_inset Formula $Q$
\end_inset

\SpecialChar endofsentence
 For that reason, the expression is revised to depend only on the absolute
 recovery temperature (
\begin_inset Formula $T_{r}$
\end_inset

) and other factors that can be determined without reference to the ambient
 temperature.
 This makes it possible to use the measured recovery temperature as a first
 estimate, determine the response parameters, and then use those response
 parameters to correct the measured recovery temperature to obtain an improved
 estimate of the improved recovery temperature.
 Iteration of that process rapidly led to convergence at the set of response
 parameters found for the unheated Rosemount 102E4AL sensor.
 
\end_layout

\begin_layout Standard
The danger in the approach taken is that, if fluctuations in dynamic heating
 (via fluctuations in airspeed) are not the dominant source of variation
 in the measured recovery temperature (
\begin_inset Formula $T_{m}$
\end_inset

) then the measured phase and amplitude ratio for the cross-spectrum of
 
\begin_inset Formula $T_{m}$
\end_inset

 and 
\begin_inset Formula $Q$
\end_inset

 will be contaminated by other causes of fluctuation in the measured recovery
 temperature.
 Indeed, if such fluctuations in 
\begin_inset Formula $T_{m}$
\end_inset

 are large compared to fluctuations in 
\begin_inset Formula $Q$
\end_inset

 then the amplitude ratio determined from the variance spectra will not
 reflect the transfer function and cannot be used to determine it.
 Therefore regions and frequency intervals were sought where it appeared
 that the fluctuations in 
\begin_inset Formula $T_{m}$
\end_inset

 arose primarily from fluctuations in 
\begin_inset Formula $Q$
\end_inset

\SpecialChar endofsentence
 This should be the case where the intensity of turbulence is high and would
 produce much larger fluctuations in 
\begin_inset Formula $T_{m}$
\end_inset

 than the existing fluctuations in ambient temperature.
 This is the goal of the discussion leading to TN Fig.
\begin_inset space ~
\end_inset

4.
\end_layout

\begin_layout Standard
The selection of data and combination into a unified data set is described
 in the text of the TN and won't be repeated here.
 Some trial-and-error investigation of the number of bins to use in the
 construction of TN Figs.
\begin_inset space ~
\end_inset

5 and 6 led to the choice of 200 bins, which determines the number of plotted
 points and error bars in the plot.
 Although it leads to reduced clarity in the plots, a large number of bins
 was settled upon to avoid significant distortion of the mean when calculated
 for a region where the variable changes rapidly, as for example approaching
 10
\begin_inset space ~
\end_inset

Hz in TN Fig.
\begin_inset space ~
\end_inset

5.
 Too large an interval, with the average defined at the mid-point of the
 interval, could distort the means toward higher values compared to the
 true distribution and hence would bias the determination of response variables.
 These plots have a more convincing appearance when a smaller number of
 bins is used, and become vary noisy if a much larger number of bins is
 used, so 200 bins was the compromise used in the TN for the unheated Rosemount
 sensor.
 Because the data sets used for other sensors were much smaller, smaller
 numbers of bins were used for those sensors.
\end_layout

\begin_layout Standard
A modified version of the Ranadu function 
\begin_inset Quotes eld
\end_inset

CohPhase()
\begin_inset Quotes erd
\end_inset

, named 
\begin_inset Quotes eld
\end_inset

CohP()
\begin_inset Quotes erd
\end_inset

 in the TN code, was used to combine the measurements of phase and amplitude
 for the flight segments used in TN Sect.
\begin_inset space ~
\end_inset

3.1.1.
 That function was modified to return a special data.frame containing the
 frequency limits of the bins and, for each frequency in the values returned
 by R function 
\begin_inset Quotes eld
\end_inset

spec.pgram()
\begin_inset Quotes erd
\end_inset

, the assignment of that frequency to one of the 200 logarithmically spaced
 bins and the phase and amplitude of the two spectra at that frequency.
 This function 
\begin_inset Quotes eld
\end_inset

CohP()
\begin_inset Quotes erd
\end_inset

 was called for each of the six ten-minute flight segments, with the measured
 recovery temperature and the expected forcing by dynamic heating (i.e., 
\begin_inset Formula $T_{m}$
\end_inset

 and 
\begin_inset Formula $Q$
\end_inset

) and then the results from all calls were averaged in each of the frequency
 bins.
 The result was an average value (with standard deviation) for the phase
 and amplitude ratio, as needed to determine the transfer function.
 The observed phase at each bin-average frequency then was plotted in TN
 Fig.
\begin_inset space ~
\end_inset

5 to show the results for the phase, where in this case the measured value
 of the recovery temperature was 
\begin_inset Quotes eld
\end_inset

RTRR
\begin_inset Quotes erd
\end_inset

.
\begin_inset Foot
status open

\begin_layout Plain Layout
At the time of the VOCALS project the recovery temperatures had names like
 TTRR instead of RTRR\SpecialChar endofsentence
 Those names were changed subsequently to reflect that
 these are better described as recovery temperatures rather than total temperatu
res.
 In this analysis, the variable TTRR has been renamed RTRR to reflect the
 current usage.
 There is no variable RTRR in the referenced data files.
\end_layout

\end_inset

 Two-standard-deviation values for the standard deviation of the mean are
 plotted because one-standard-deviation limits appeared hard to distinguish
 in this plot.
 The error-bar plot was generated using the ggplot2 function 
\begin_inset Quotes eld
\end_inset

geom_errorbar()
\begin_inset Quotes erd
\end_inset

 with the limits specified using the bin-average mean values and standard
 deviations.
\end_layout

\begin_layout Standard
The plotted 
\begin_inset Quotes eld
\end_inset

theoretical response
\begin_inset Quotes erd
\end_inset

 was generated by 
\begin_inset Quotes eld
\end_inset

LTphase()
\begin_inset Quotes erd
\end_inset

 using the standard values of the response parameters as found later by
 fitting to these values and the corresponding values for the amplitude
 ratio.
 The plotted frequencies are limited to those above 
\begin_inset Formula $10^{-2}\mathrm{Hz}$
\end_inset

 because, below that frequency, bins had too few independent measurements
 to provide good statistics, although the available measurements below 0.01
\begin_inset space ~
\end_inset

Hz were consistent with zero phase shift as would be expected from the theoretic
al response.
 The frequency interval was also limited to 12
\begin_inset space ~
\end_inset

Hz because the highest-frequency point in the plot otherwise departed significan
tly from the trend by being much higher (about 
\begin_inset Formula $-43^{\circ}$
\end_inset

) and so appearing to be an outlier that should be excluded from the fit.
 The highest frequency included in the plot also shows some possible deviation
 and maybe should also be excluded.
\end_layout

\begin_layout Standard
TN Fig.
\begin_inset space ~
\end_inset

6 was generated in similar fashion, using the ratio of amplitudes (the square
 roots of the ratio of variance spectra) in place of the phase.
 For the fit the calculation of the chi-square included the deviations from
 the experimental phases and the experimental amplitude ratios with equal
 weights, except that the experimental amplitude ratios were only included
 for the frequency range from 0.1 to 3
\begin_inset space ~
\end_inset

Hz.
 This range was selected because outside that range the values departed
 significantly and systematically from the theoretical prediction.
 As explained in the TN, the R function 
\begin_inset Quotes eld
\end_inset

optim()
\begin_inset Quotes erd
\end_inset

, part of the standard 
\begin_inset Quotes eld
\end_inset

stats
\begin_inset Quotes erd
\end_inset

 package, was used for this fit.
 It the case of the unheated Rosemount sensor, the fit used the default
 Nelder-Mead minimization method.
 without imposed constraints on the values of the three parameters.
 This function returned a calculated Hessian and that was used to determine
 estimates of the uncertainty in the parameters.
 The function reported that it converged to a solution, and at the point
 of convergence the chi-square was reasonable at 262 for 224 degrees of
 freedom.
 In the calculation of the reported uncertainty limits the reported Hessian
 was divided by 4 to account for the use of two-standard-deviation standard
 deviations and then the square roots of the diagonal elements of the inverted
 Hessian matrix were reported.
 (This ignores significant correlations among the error estimates that perhaps
 should be considered and reported.)
\end_layout

\begin_layout Standard
The TN then reports on an iteration in which the measured recovery temperature
 was first corrected using the parameters as determine in the fit and then
 the fit was repeated.
 This process was performed outside the .Rnw code but the result did not
 change the fit parameters even after only one iteration so the iteration
 procedure was not included in the processing code.
\end_layout

\begin_layout Subsubsection
The heated Rosemount sensor
\end_layout

\begin_layout Standard
A study of the heated Rosemount sensor was included in the .lyx file but
 excluded from the TN for these reasons:
\end_layout

\begin_layout Enumerate
The sensor is seldom used and has largely been replaced by the heated HARCO
 sensor.
\end_layout

\begin_layout Enumerate
The replacement HARCO is designed to have the same characteristics as the
 original.
\end_layout

\begin_layout Enumerate
Only a limited data set was available and it led to problematic parameters
 because the fit favored a value of the ratio of heat transfer to the air
 vs.
\begin_inset space ~
\end_inset

that to the sensor (parameter 
\begin_inset Formula $a$
\end_inset

) of less than zero.
 As reported below, the fit procedure was changed to restrict the value
 of 
\begin_inset Formula $a$
\end_inset

 to be positive but the fit then reported a best value of 
\begin_inset Formula $a=0$
\end_inset

.
 
\end_layout

\begin_layout Standard
In the .lyx file the inclusion of this material is controlled by the 
\begin_inset Quotes eld
\end_inset

Extra
\begin_inset Quotes erd
\end_inset

 branch which is not included in the TN but could be added by activating
 this branch.
 A version with this and other extra material included can be generated
 by the file 
\begin_inset Quotes eld
\end_inset

SensibleHeatFluxTechNoteExtra.Rnw
\begin_inset Quotes erd
\end_inset

, which is generated by LyX with the 
\begin_inset Quotes eld
\end_inset

Extra
\begin_inset Quotes erd
\end_inset

 branch activated.
\end_layout

\begin_layout Standard
Here is the text that would have been included in the TN but was excluded:
\end_layout

\begin_layout Subsubsection*
(TN Sect.
\begin_inset space ~
\end_inset

3, after 3.1.1) The heated Rosemount sensor
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<XTR3>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

bestW <- c(0.0, 0.1635184, 0.9017476)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename figure/heatVarSpec-1.pdf
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Variance spectrum for the recovery temperature from the heated Rosemount
 sensor (RTWH) and for the unheated Rosemount 102E4AL sensor (RTRR), for
 a low-level flight segment in the marine boundary layer.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
During the same flight used to study the unheated sensor, a heated Rosemount
 sensor was also present.
 Data were assembled as for the unheated sensor and the preceding analysis
 was repeated, except that two of the flight segments were omitted because
 they led to erratic indications of the phase.
 The heated sensor had almost no response to any fluctuations above 1
\begin_inset space ~
\end_inset

Hz, as shown in Fig.
\begin_inset space ~
\end_inset

1.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename figure/VphaseW-1.pdf
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Phase lag of recovery temperature vs.
\backslash

\backslash
 dynamic heating, for the measurements (error bars) from a Rosemount heated
 sensor, and the theoretical response for the best-fit parameters to the
 measurements with frequency below 1 Hz (green line).
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The measured phase between the measured recovery temperature and the calculated
 dynamic heating is shown in Fig.
\begin_inset space ~
\end_inset

2.
 Above 1
\begin_inset space ~
\end_inset

Hz, the lack of response led to erratic estimates of the phase and the coherence
 between the measured recovery temperature and dynamic heating was consistent
 with zero, so those measurements of the phase were omitted from the fit.
 Similarly, the amplitude for frequencies above 1
\begin_inset space ~
\end_inset

Hz was not used in the fit, and measurements of amplitude for frequency
 below 0.13
\begin_inset space ~
\end_inset

Hz were similarly omitted because for these frequencies there appeared to
 be significant fluctuations in recovery temperature caused by real changes
 in air temperature and not primarily changes in dynamic heating.
 The best-fit parameters so obtained were 
\begin_inset Formula $a=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(bestW[1], 2)}
\end_layout

\end_inset

, 
\begin_inset Formula $\tau_{1}=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(bestW[2], 2)}
\end_layout

\end_inset


\begin_inset space ~
\end_inset

s and 
\begin_inset Formula $\tau_{2}=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(bestW[3], 2)}
\end_layout

\end_inset


\begin_inset space ~
\end_inset

s; these values are the basis for the theoretical lines in Figs.
\begin_inset space ~
\end_inset

2 and 3.
\begin_inset Foot
status open

\begin_layout Plain Layout
The fit was constrained to keep 
\begin_inset Formula $a\geq0$
\end_inset

.
 Still smaller values of the 
\begin_inset Formula $\chi^{2}$
\end_inset

 were obtained for negative 
\begin_inset Formula $a$
\end_inset

, but this would be inconsistent with the assumed model of heat transfer
 to the wire.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename figure/checkW-1.pdf
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The ratio of the spectral amplitude for the measurement of recovery temperature
 ($T_m(t)$) from the heated Rosemount sensor to that for dynamic heating
 ($Q$), shown as the plotted data points.
 The green line is the prediction from the transfer function determined
 from the best-fit values matching the phase lag and amplitude ratio between
 these variables.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The phase shift leads to these conclusions:
\end_layout

\begin_layout Enumerate
A two-time-constant formula does not provide a very good representation
 of the low-frequency portion of the observations that is between 0.01 and
 0.04
\begin_inset space ~
\end_inset

Hz.
 This may indicate that still another time constant is involved in the response
 of this sensor and that the two-equation representation provided by 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Ts"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Tm"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is incomplete.
\end_layout

\begin_layout Enumerate
The observed phase shift falls below 
\begin_inset Formula $-90^{\circ}$
\end_inset

 above about 0.3
\begin_inset space ~
\end_inset

Hz.
 This is impossible for a single-time-constant sensor but is possible, as
 the theoretical line shows, for a two-time-constant representation of the
 response, so it is conclusive that at least two time constants are involved.
 This also indicates that wrong-sign contributions to sensible-heat flux
 would be measured by this sensor above about 0.3
\begin_inset space ~
\end_inset

Hz.
\end_layout

\begin_layout Enumerate
The low value of 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(bestW[1], 2)}
\end_layout

\end_inset

, indicates that the primary heat transfer from the wire is not to the air
 but to the support.
 For 
\begin_inset Formula $a$
\end_inset

 equal to zero, the differential equations TN Eq.
\begin_inset space ~
\end_inset

(3) and (4) do not separately constrain 
\begin_inset Formula $\tau_{1}$
\end_inset

 and 
\begin_inset Formula $\tau_{2}$
\end_inset

.
 The fit results show complete negative correlation for the errors in these
 parameters, so they cannot be determined independently.
 The result, however, is not equivalent to a single time constant, as demonstrat
ed by the measured phase shifts below 
\begin_inset Formula $-90^{\circ}$
\end_inset

.
 The solution to the differential equations with 
\begin_inset Formula $a=0$
\end_inset

 becomes
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
C_{1}=b\cos\zeta\left(\frac{-\omega\tau_{1}}{1+\omega^{2}\tau_{1}^{2}}\right)+b\sin\zeta\left(\frac{1}{1+\omega^{2}\tau_{1}^{2}}\right)
\]

\end_inset


\begin_inset Formula 
\[
C_{2}=b\cos\zeta\left(\frac{1}{1+\omega^{2}\tau_{1}^{2}}\right)+b\sin\zeta\left(\frac{\omega\tau_{1}}{1+\omega^{2}\tau_{1}^{2}}\right)
\]

\end_inset


\begin_inset Formula 
\begin{align*}
c & =\sqrt{C_{1}^{2}+C_{2}^{2}}=2b^{2}\frac{1+\omega^{2}\tau_{1}^{2}}{(1+\omega^{2}\tau_{1}^{2})^{2}}=2\left(\frac{1}{1+\omega^{2}\tau_{2}^{2}}\right)\left(\frac{1}{1+\omega^{2}\tau_{1}^{2}}\right)
\end{align*}

\end_inset


\begin_inset Formula 
\[
\tan\phi=(C_{1}/C_{2})=\frac{-\omega\tau_{1}\cos\zeta+\sin\zeta}{\cos\zeta+\omega\tau_{1}\sin\zeta}=\frac{\tan\zeta-\omega\tau_{1}}{1+\omega\tau_{1}\tan\zeta}=\frac{-\omega(\tau_{2}+\tau_{1})}{1-\omega^{2}\tau_{1}\tau_{2}}
\]

\end_inset

These equations show that, for any solution, the values of 
\begin_inset Formula $\tau_{1}$
\end_inset

 and 
\begin_inset Formula $\tau_{2}$
\end_inset

 can be exchanged and the solution will remain the same.
 The particular solution found was influenced by the initial parameters
 for the search function, but reversed value for 
\begin_inset Formula $\tau_{1}$
\end_inset

 and 
\begin_inset Formula $\tau_{2}$
\end_inset

 could be obtained for other initial conditions.
 Nevertheless, it appears that the best interpretation is that the support
 responds more slowly, with 
\begin_inset Formula $\tau_{2}=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(bestW[3], 2)}
\end_layout

\end_inset

, and the sensing wire responds faster with time constant 
\begin_inset Formula $\tau_{1}=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(bestW[2], 2)}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename figure/rfHeated-1.pdf
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The transfer function for the heated Rosemount sensor on the C-130 research
 aircraft, based on the best-fit parameters that match the observed phase
 shift relative to dynamic heating.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The transfer function for this sensor is shown in Fig.
\begin_inset space ~
\end_inset

4.
 It does not appear to be feasible to measure sensible-heat flux with this
 sensor, even with the correction procedures to be developed in Section
 5, because above about 1
\begin_inset space ~
\end_inset

Hz there does not appear to be enough signal to amplify by using the transfer
 function.
 Also, the phase shift is less than 
\begin_inset Formula $-90^{\circ}$
\end_inset

 above this frequency.
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
(this is the end of the section re the heated Rosemount sensor, excluded
 from the TN.)
\end_layout

\begin_layout Subsubsection
Comments on TN Sect.
\begin_inset space ~
\end_inset

3.1.2, the heated HARCO sensor
\end_layout

\begin_layout Standard
The first try was based on WECAN data, but the results did not seem to give
 a response dominated by dynamic-heating forcing.
 That code still resides in the .Rnw file, but it was superceded by a selected
 flight segment from the SOCRATES experiment, and that is the source of
 the data in the TN\SpecialChar endofsentence
 Procedures followed the pattern explained above for
 the unheated Rosemount sensor, and a transfer function for the HARCO was
 plotted as Fig.
\begin_inset space ~
\end_inset

10 using the same procedures.
\end_layout

\begin_layout Subsection
Comments on TN Sect.
 3.2, response to a step change
\end_layout

\begin_layout Standard
The VOCALS project provided a good opportunity to search for discontinuities
 topping the marine boundary layer because most flights included numerous
 climbs and descents through that structure.
 A large number of these were examined in a search for sharp transitions,
 but almost all showed evidence of mixing at the top and were not sharp
 as would be desired to test response to a step change.
 The case selected was the best case, and indeed the only good case, from
 about 50 examined.
 Some other projects were also considered, but good cases where the unheated
 Rosemount was in use were not found.
 It appears that this is a difficult way to test the response characteristics
 of the sensor, although other situations (terrestrial boundary layer, frontal
 surface, etc.) might provide better opportunities.
\end_layout

\begin_layout Subsection
TN Sect.
\begin_inset space ~
\end_inset

3.3, application to a speed run
\end_layout

\begin_layout Standard
The initial approach was to shift the measurements in time to minimize the
 standard deviation about the fit, but the problem with this is that the
 Mach number varies significantly during the speed run so the appropriate
 time shift, according to TN Eq.
\begin_inset space ~
\end_inset

(13), should also vary significantly.
 Therefore an alternate approach was used in which the measured recovery
 temperature was corrected for the sensor response.
 That eliminated most but not all evidence of hysteresis, as shown in TN
 Fig.
\begin_inset space ~
\end_inset

19.
 Still better fits (in terms of the residual standard deviation) were obtained
 if the time constants were increased slightly, both by 25%.
\end_layout

\begin_layout Subsection
TN Sect.
\begin_inset space ~
\end_inset

3.4 (suppressed)
\end_layout

\begin_layout Standard
The LyX file and the 
\begin_inset Quotes eld
\end_inset

Extra
\begin_inset Quotes erd
\end_inset

 .Rnw file contain some additional material here that has been omitted from
 the TN because its significance was not clear and no good explanation was
 found for the shape of the corrected variance spectrum.
 It may be useful to return to this someday.
\end_layout

\begin_layout Section
TN Sect.
\begin_inset space ~
\end_inset

4: Revised treatment of dynamic heating
\end_layout

\begin_layout Standard
The calculation of 
\begin_inset Formula $Q^{\prime}$
\end_inset

 via integration of the differential equations initially used the R function
 
\begin_inset Quotes eld
\end_inset

runge.kutta()
\begin_inset Quotes erd
\end_inset

 from the 
\begin_inset Quotes eld
\end_inset

rmutil
\begin_inset Quotes erd
\end_inset

 package of 
\begin_inset CommandInset citation
LatexCommand citet
key "runge.kutta"
literal "false"

\end_inset

.
 This implements the standard fourth-order Runge-Kutta integration and was
 used here with a 25
\begin_inset space ~
\end_inset

Hz time series for 
\begin_inset Formula $Q$
\end_inset

\SpecialChar endofsentence
 Because the first time constant for the unheated Rosemount 102E4AL sensor
 is so small, the second required integration became unstable and inaccurate
 when used with 1
\begin_inset space ~
\end_inset

Hz measurements, as is discussed further in Appendix C\SpecialChar endofsentence
 No problems were
 encountered in the applications in TN Sect.
\begin_inset space ~
\end_inset

4, but out of caution and because it actually executed faster the new 
\begin_inset Quotes eld
\end_inset

rk4.integrate()
\begin_inset Quotes erd
\end_inset

 function (cf.
\begin_inset space ~
\end_inset

Sect.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:rk4.integrate()"
plural "false"
caps "false"
noprefix "false"

\end_inset

) was used for the integrations in this section.
 
\end_layout

\begin_layout Standard
The function 
\begin_inset Quotes eld
\end_inset

reviseDH()
\begin_inset Quotes erd
\end_inset

 was constructed that returns a new ambient-temperature variable with the
 dynamic-heating term adjusted as described in this section of the TN\SpecialChar endofsentence
 That
 may eventually be modified to be more general for addition to the 
\begin_inset Quotes eld
\end_inset

Ranadu
\begin_inset Quotes erd
\end_inset

 package, but as used in the present .Rnw routine it is used in a special
 way: It must be called with an argument that is a data.frame containing
 at least TASX and ATX (airspeed and ambient temperature), a set of response
 parameters in a list, and a recovery facter that may be a vector matching
 the rows in the data.frame.
 It returns a revised value of ATX with the dynamic-heating term filtered
 as specified by the response parameters.
 The function should only be used on 25-Hz measurements; a revised function
 is developed in TN Appendix B.
\end_layout

\begin_layout Standard
Here are some details regarding the filter discussed in Sect.
\begin_inset space ~
\end_inset

4.2.
 The filter was specified in the code chunk labeled 
\begin_inset Quotes eld
\end_inset

designFilter
\begin_inset Quotes erd
\end_inset

 as follows, following suggestions from 
\begin_inset CommandInset citation
LatexCommand citet
key "Press:1992:NRC:148286"
literal "false"

\end_inset

:
\end_layout

\begin_layout Enumerate
Use the response parameters for the sensor (e.g., for the unheated Rosemount
 102E4AL sensor) and a large set of frequencies spanning the interval from
 
\begin_inset Formula $-12.5$
\end_inset

 to 
\begin_inset Formula $12.5$
\end_inset


\begin_inset space ~
\end_inset

Hz, e.g., with resolution between assumed frequencies of (1/600)
\begin_inset space ~
\end_inset

Hz, in the solution specified by TN Eqs.
\begin_inset space ~
\end_inset

5–8 to specify the transfer function.
 This solution is stored in a vector with frequencies in the order 0–12.5
\begin_inset space ~
\end_inset

Hz, then 
\begin_inset Formula $(-12.5+(1/600)$
\end_inset

 to 
\begin_inset Formula $-(1/600)$
\end_inset

 Hz as needed for the Fourier transform.
\end_layout

\begin_layout Enumerate
The inverse Fourier transform then is the impulse function at 15,000 delays,
 many of them representing negative delays.
 The values in the central part of this array were mostly very small.
\end_layout

\begin_layout Enumerate
To obtain a manageable number of moving-average coefficients, all values
 in the array representing the impulse function were set to zero for indices
 k with values 
\begin_inset Formula $M+2\leq k\leq N-M$
\end_inset

 where 
\begin_inset Formula $N$
\end_inset

 is the length of the calculated impulse function and 
\begin_inset Formula $M=100$
\end_inset

 to leave 201 non-zero coefficients.
 This gave coefficients spanning about 8 s at 25
\begin_inset space ~
\end_inset

Hz, or a time long compared to the expected impulse response of the sensor.
\end_layout

\begin_layout Enumerate
The upper-100 coefficients represent negative delays in the impulse response
 because of the cyclic nature of the Fourier transform, so the coefficients
 were re-arranged into a sequence with the last-100 coefficients first and
 the initial-101 coefficients moved to the end of the array.
 These coefficients were then moving average coefficients that implement
 a filter matching the transfer function, except for some omitted terms
 outside the 200-coefficient range that are assumed negligible.
 
\end_layout

\begin_layout Enumerate
The resulting set of moving-average coefficients can then be applied to
 the measured dynamic-heating term 
\begin_inset Formula $Q$
\end_inset

 to produce a filtered version.
\end_layout

\begin_layout Enumerate
The filtered result then needs to be shifted in time by 4
\begin_inset space ~
\end_inset

s to correct for the offset in the filter.
\end_layout

\begin_layout Standard
Some auxiliary studies not documented in the TN evaluated the significance
 of the change in dynamic heating in terms of possible contributions to
 the correlation between updraft and measured temperature.
 Those cursory studies did not find a significant effect on measurements
 of sensible-heat flux because, while the error arising from using the standard
 processing scheme is weakly correlated with updraft in some cases, the
 magnitude is minor in comparison to other contributions to the flux.
 The comments supporting use of this revised correction anyway have been
 retained in the TN because these checks were not exhaustive and it could
 be the case that the correction will be more significant in other cases.
\end_layout

\begin_layout Section
TN Sect.
\begin_inset space ~
\end_inset

5: Correcting the cospectrum
\end_layout

\begin_layout Standard
Following the introductory discussion of the cospectrum, there is a suppressed
 section that plots and discussed the quadrature spectrum.
 This section is included in the 
\begin_inset Quotes eld
\end_inset

Extra
\begin_inset Quotes erd
\end_inset

 branch so it is accessible to anyone interested, but the material and discussio
n did not seem be contribute to the main theme of this section in any significan
t way so it has been omitted from the standard branch.
 It is worth noting, however, that the quadrature spectrum showed more indicatio
n of significant values than might have been expected, and some aspects
 of that distribution were not understood or explained convincingly in the
 suppressed material.
 An alternative to the correction procedure used in this section would be
 to transform between the cospectrum and quadrature spectrum according to
 the transfer-function phase angle, and that was explored but was abandoned
 when it did not appear to produce results consistent with the approach
 taken here.
 
\end_layout

\begin_layout Subsection
TN Sect.
\begin_inset space ~
\end_inset

5.1: Outline of the correction procedure
\end_layout

\begin_layout Standard
Two methods are discussed, but only one is used in the TN, the first of
 the two methods.
 This was coded into the 
\begin_inset Quotes eld
\end_inset

Ranadu
\begin_inset Quotes erd
\end_inset

 function 
\begin_inset Quotes eld
\end_inset

flux()
\begin_inset Quotes erd
\end_inset

 to provide an optional correction to the cospectrum.
 The procedure is to pass the time-response parameters to this function
 in a list (
\begin_inset Quotes eld
\end_inset

Par
\begin_inset Quotes erd
\end_inset

) so that the corresponding transfer function can be generated and applied
 to correct the cospectrum.
 Only the time-response parameters from the list are used; other characteristics
 (b, zeta, frq) are generated in 
\begin_inset Quotes eld
\end_inset

flux()
\begin_inset Quotes erd
\end_inset

 from the time-response parameters and the frequencies generated there.
\end_layout

\begin_layout Subsection
TN Sect.
\begin_inset space ~
\end_inset

5.2: Application to examples
\end_layout

\begin_layout Standard
The plots for these examples were all generated by 
\begin_inset Quotes eld
\end_inset

Ranadu::flux()
\begin_inset Quotes erd
\end_inset

, optionally with time-response parameters provided to use when calculating
 the corrected cospectrum.
 The corrected plots show the corrected cospectrum, but they also indicate
 (as a dashed brown line) the exceedance that was obtained before correction.
 For more information on 
\begin_inset Quotes eld
\end_inset

Ranadu::flux()
\begin_inset Quotes erd
\end_inset

 see R help for this function or the 
\begin_inset CommandInset href
LatexCommand href
name "“flux.Rd”"
target "https://github.com/NCAR/Ranadu/blob/WAC/man/flux.Rd"
literal "false"

\end_inset

 help file in the GitHub repository.
 Some additional aspects of this routine are described here because of their
 importance to this study:
\end_layout

\begin_layout Enumerate
The arguments include 
\begin_inset Quotes eld
\end_inset

scaleFactor
\begin_inset Quotes erd
\end_inset

, which is multiplied to the cospectrum to obtain a flux.
 For sensible heat, the scale factor is air density multiplied by specific
 heat at constant pressure (
\begin_inset Formula $\rho_{a}C_{p}$
\end_inset

), as shown by TN eq.
\begin_inset space ~
\end_inset

(1).
 This can be a vector of length equal to the number of rows in the data.frame
 supplied to 
\begin_inset Quotes eld
\end_inset

flux( )
\begin_inset Quotes erd
\end_inset

, and that is how it is supplied as used in the TN.
 It can also be a single value.
 
\end_layout

\begin_layout Enumerate
Units can be specified using the 
\begin_inset Quotes eld
\end_inset

bquote()
\begin_inset Quotes erd
\end_inset

 function.
 For the sensible-heat examples, the appropriate specification is 
\begin_inset Quotes eld
\end_inset

Units = bquote("W" ~ m ^ -2)
\begin_inset Quotes erd
\end_inset

.
 The units are also used in the title to the plot where the calculated flux
 is displayed.
\end_layout

\begin_layout Enumerate
The default number of smoothing bins (argument 
\begin_inset Quotes eld
\end_inset

smoothBins
\begin_inset Quotes erd
\end_inset

) is zero, and in that case no binning and smoothing will occur and the
 average-value dots will not appear on the plot.
 The option to plot an uncertainty ribbon (
\begin_inset Quotes eld
\end_inset

plotRibbon
\begin_inset Quotes erd
\end_inset

) will have no effect because this depends on the binning process to determine
 the standard deviation that is plotted in the ribbon.
\end_layout

\begin_layout Enumerate
In addition to the plot, 
\begin_inset Quotes eld
\end_inset

flux( )
\begin_inset Quotes erd
\end_inset

 also returns a data.frame containing the cospectrum and quadrature spectrum
 along with the exceedance distributions (called 
\begin_inset Quotes eld
\end_inset

ogives
\begin_inset Quotes erd
\end_inset

 in that data.frame).
 This makes it possible to construct plots in other formats.
 This may be useful in cases where the logarithmic plot generated by 
\begin_inset Quotes eld
\end_inset

flux( )
\begin_inset Quotes erd
\end_inset

 is not appropriate.
\end_layout

\begin_layout Enumerate
As plotted, the cospectrum is weighted by frequency, as is appropriate for
 a logarithmic abscissa.
 Although the units are listed as supplied, the true units for a plot in
 this format are those units per logarithm in frequency.
 This weighting would preserve the relationship between area and the contributio
n to variance if the ordinate axis were linear, but in this case of a logarithmi
c ordinate axis one must take the logarithmic scale into account when visually
 relating area on the plot to the contribution to variance.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

flux( )
\begin_inset Quotes erd
\end_inset

 calls 
\begin_inset Quotes eld
\end_inset

Ranadu::CohPhase( )
\begin_inset Quotes erd
\end_inset

 to calculate the cospectrum.
 That routine in turn calls the 
\begin_inset Quotes eld
\end_inset

fft( )
\begin_inset Quotes erd
\end_inset

 function from the R 
\begin_inset Quotes eld
\end_inset

stats
\begin_inset Quotes erd
\end_inset

 package to calculate the Fourier transforms and then finds the cospectrum
 and quadrature spectrum from the product of those transforms.
 The scaling convention is that the integral of the variance spectrum over
 positive frequencies will equal the total variance.
\end_layout

\begin_layout Enumerate
The argument 
\begin_inset Quotes eld
\end_inset

Par
\begin_inset Quotes erd
\end_inset

 should only be supplied if a corrected cospectrum using those parameters
 should be calculated and plotted, 
\emph on
and at present it is specific to temperature sensors.

\emph default
 The 
\begin_inset Quotes eld
\end_inset

flux( )
\begin_inset Quotes erd
\end_inset

 routine calculates the solution to the differential equations using only
 the three response parameters (a, tau1, tau2) in 
\begin_inset Quotes eld
\end_inset

Par
\begin_inset Quotes erd
\end_inset

, which should be a list containing at least those values.
 The solution does not call 
\begin_inset Quotes eld
\end_inset

LTphase()
\begin_inset Quotes erd
\end_inset

 but recalculates the equation solution specified by TN Eqs.
\begin_inset space ~
\end_inset

(7) and (8), and then it divides the calculated cospectrum by the gain (amplitud
e) of the transfer function to correct for the sensor time response.
 It also divides by the cosine of the phase of the transfer function.
 
\end_layout

\begin_layout Standard
Some of the numbers quoted don't arise directly from the code but are from
 special evaluations performed by replication of segments of the code.
 For example, the fraction of the flux missed was evaluated by running the
 same code without the correction procedure and noting how the measured
 flux changed, and in the SOCRATES case the estimate of flux from frequencies
 above 1
\begin_inset space ~
\end_inset

Hz was estimated similarly by special execution of the 
\begin_inset Quotes eld
\end_inset

SOCp1
\begin_inset Quotes erd
\end_inset

 code chunk with the wavelength limit changed to 125
\begin_inset space ~
\end_inset

m.
 For true reproducibility, these steps should have been incorporated into
 the .Rnw file; perhaps that can be fixed eventually.
\end_layout

\begin_layout Subsection
TN Sect.
\begin_inset space ~
\end_inset

5.3: Correcting the temperature directly
\end_layout

\begin_layout Standard
The method described here is applied to 25-Hz time series and will fail
 if applied to 1-Hz measurements because, for the short first time constant
 of the unheated Rosemount 102E4AL sensor, the Runge-Kutta integration becomes
 unstable and generates large errors if the time step is as large as one
 second.
 Appendix B discusses an alternate integration method that can be applied
 to 1 Hz files.
\end_layout

\begin_layout Standard
There is a suppressed segment discussing the heated Rosemount sensor and
 the special considerations that arise because the best-fit value for the
 parameter 
\begin_inset Formula $a$
\end_inset

 is zero.
 That segment can be retrieved by activating the 
\begin_inset Quotes eld
\end_inset

Extra
\begin_inset Quotes erd
\end_inset

 branch in the LyX file or using the appropriate .Rnw file.
 The problem addressed there might have some interest because the best-fit
 result for the heated Rosemount led to modified differential equations
 that needed a different method for their solution.
\end_layout

\begin_layout Standard
For Fourier transforms used here and elsewhere in the TN, the structure
 of the complex length-N vector produced by 
\begin_inset Quotes eld
\end_inset

fft()
\begin_inset Quotes erd
\end_inset

 is as follows:
\end_layout

\begin_layout Enumerate
The first entry is the constant zero-frequency value.
 For real-number input to fft(), this will be a real number (imaginary part
 zero).
\end_layout

\begin_layout Enumerate
The next N/2 values have positive frequencies in increments of 
\begin_inset Quotes eld
\end_inset

Rate / N
\begin_inset Quotes erd
\end_inset

 from a minimum frequency of 
\begin_inset Quotes eld
\end_inset

Rate / N
\begin_inset Quotes erd
\end_inset

 (e.g., for a 25-Hz file spanning 10 min with N = 15000, 
\begin_inset Formula $\delta\nu=1/600\,\mathrm{Hz}$
\end_inset

) up to the Nyquist frequency of 
\begin_inset Quotes eld
\end_inset

Rate/2
\begin_inset Quotes erd
\end_inset

.
 There value at the Nyquist frequency will be real (imaginary part zero)
 for real input to fft().
 That frequency only appears once; the value is the same for the frequencies
 +Rate/2 and 
\begin_inset Formula $-$
\end_inset

Rate/2 so it is not duplicated.
 
\end_layout

\begin_layout Enumerate
These are followed by the N/2-1 frequencies from 
\begin_inset Quotes eld
\end_inset

-Rate/2+
\begin_inset Formula $\delta\nu"$
\end_inset

 to 
\begin_inset Formula $-\delta\nu$
\end_inset

.
 For real-number input to the fft() function, these will be the complex
 conjugates of the corresponding values for positive frequencies.
 
\end_layout

\begin_layout Standard
To match this sequence of frequencies, transfer functions are generated
 at frequencies specified, for example, by statements like this:
\end_layout

\begin_layout LyX-Code
f <- fft (DT$TTRR)
\end_layout

\begin_layout LyX-Code
N <- length(f)
\end_layout

\begin_layout LyX-Code
df <- Rate / N
\end_layout

\begin_layout LyX-Code
frq <- c(seq(0, Rate / 2, by = df), seq(-Rate / 2 + df, -df, by = df))
\end_layout

\begin_layout Standard
The function generating the transfer function (here, LTphase( )) must be
 valid for negative and zero frequency.
\end_layout

\begin_layout Section
TN Appendix A Comments
\end_layout

\begin_layout Standard
The generation of a variance spectrum with 
\begin_inset Formula $-5/3$
\end_inset

 slope (spectral variance vs frequency) started by using work from an earlier
 study, documented 
\begin_inset CommandInset href
LatexCommand href
name "here"
target "https://drive.google.com/open?id=1TIcrpjZ9BQRBaLle31zc_lzKafL4Xbee"
literal "false"

\end_inset

.
 In the course of working on this TN, it became evident that there is a
 better way: generate a Gaussian noise spectrum (flat vs.
\begin_inset space ~
\end_inset

frequency) and then modify the spectral density to have 
\begin_inset Formula $-5/3$
\end_inset

 slope before transforming back to the simulated measurement sequence.
 This was the approach used in the TN\SpecialChar endofsentence
 The code is listed below because the
 code segment is fairly short and the approach might be useful elsewhere.
 This is much faster than the original method used in the TN and in the
 referenced document above.
 However, there appeared to be some advantages to the original method in
 terms of accuracy and consistency of results for different random sequences.
 Perhaps those advantages arose from generating originally at 50
\begin_inset space ~
\end_inset

Hz and then reducing the sample rate, or they may have arisen from generation
 as complete sine waves spanning the entire time period (which is unrealistic).
 In the code below, some truncation is included for frequency components
 smaller than 0.02
\begin_inset space ~
\end_inset

Hz, as a commented option.
 This seemed to improve the consistency of the results at the highest frequency
 and so was included in the latest simulation used in theTN.
\end_layout

\begin_layout Standard
The TN also includes commented sections to use integrations instead of filtering
 to predict the response of the sensor to the recovery temperature and to
 the dynamic heating.
 Those have been suppressed in favor of filtering, which provides better
 performance.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Gsim, include = TRUE, echo = TRUE, fig.pos = 't', fig.height = 4, fig.cap
 = 'Variance spectra for simulated $-5/3$-slope variables (with 3:4 ratio
 between longitudinal and lateral components).'>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Rate <- 25
\end_layout

\begin_layout Plain Layout

duration <- 2^16 / Rate
\end_layout

\begin_layout Plain Layout

epsilon <- 1.e-4  ## Specify the eddy dissipation rate, mks units
\end_layout

\begin_layout Plain Layout

V <- 200   ## assumed flight speed, m/s
\end_layout

\begin_layout Plain Layout

## Spectral variance amplitude, lateral component
\end_layout

\begin_layout Plain Layout

C <- (2 / 3) * (2 * pi / V) ^ (-2 / 3) * epsilon ^ (2 / 3) 
\end_layout

\begin_layout Plain Layout

Time <- seq(0, duration * Rate - 1) / Rate
\end_layout

\begin_layout Plain Layout

N <- length(Time)
\end_layout

\begin_layout Plain Layout

A <- sqrt(C * Rate / 2)
\end_layout

\begin_layout Plain Layout

u <- rnorm(N, 0, A) * sqrt(3/4)  ## sqrt(3/4) to get 3:4 ratio, spectra
\end_layout

\begin_layout Plain Layout

v <- rnorm(N, 0, A)
\end_layout

\begin_layout Plain Layout

w <- rnorm(N, 0, A)
\end_layout

\begin_layout Plain Layout

D <- data.frame(Time = Time, TASX = V + u, u = u, v = v, w = w)
\end_layout

\begin_layout Plain Layout

attr(D, 'Rate') <- Rate
\end_layout

\begin_layout Plain Layout

f1 <- fft(D$u)
\end_layout

\begin_layout Plain Layout

f2 <- fft(D$v)
\end_layout

\begin_layout Plain Layout

f3 <- fft(D$w)
\end_layout

\begin_layout Plain Layout

df <- Rate / N
\end_layout

\begin_layout Plain Layout

frq <- c(seq(0, Rate/2, by = df), seq(-Rate/2+df, -df, by = df))
\end_layout

\begin_layout Plain Layout

f1[2:N] <- f1[2:N] * abs(frq[2:N]) ^ (-5/6)
\end_layout

\begin_layout Plain Layout

f2[2:N] <- f2[2:N] * abs(frq[2:N]) ^ (-5/6)
\end_layout

\begin_layout Plain Layout

f3[2:N] <- f3[2:N] * abs(frq[2:N]) ^ (-5/6)
\end_layout

\begin_layout Plain Layout

# f1[abs(frq) < 0.02] <- 1.e-5  ## Truncate low-frequency (improves high-f
 accuracy)
\end_layout

\begin_layout Plain Layout

# f2[abs(frq) < 0.02] <- 1.e-5  ## (Suppressed here but used in the TN simulation)
\end_layout

\begin_layout Plain Layout

# f3[abs(frq) < 0.02] <- 1.e-5
\end_layout

\begin_layout Plain Layout

D$u <- Re(fft(f1, inverse = TRUE) / N)
\end_layout

\begin_layout Plain Layout

D$v <- Re(fft(f2, inverse = TRUE) / N)
\end_layout

\begin_layout Plain Layout

D$w <- Re(fft(f3, inverse = TRUE) / N)
\end_layout

\begin_layout Plain Layout

## Modify time to get a POSIXct value as expected by Ranadu:
\end_layout

\begin_layout Plain Layout

load('chunks/Time_units.Rdata')  ## Saved from a conventional file
\end_layout

\begin_layout Plain Layout

attr(D$Time, 'units') <- Time_units$value
\end_layout

\begin_layout Plain Layout

tref <- sub ('seconds since ', '', attr (D$Time, 'units'))
\end_layout

\begin_layout Plain Layout

D$Time <- as.POSIXct(D$Time, tz = 'UTC', origin = tref)
\end_layout

\begin_layout Plain Layout

D %>% select(Time, TASX, u, v, w) %>% VSpec(method = 'MEM', WACtheme = 1)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
TN Appendix B: Processing Algorithms
\end_layout

\begin_layout Standard
This Appendix mostly provides context for the correction script 
\begin_inset Quotes eld
\end_inset

ReviseT.R
\begin_inset Quotes erd
\end_inset

 that accompanies this TN.
 Section B.2.2, however, is new and is not addressed in the main body of the
 report.
 It is isolated to the Appendix because it applies specifically to the GV
 and will not be applicable more generally, although the correction technique
 might have other uses.
\end_layout

\begin_layout Standard
This discussion focuses on 
\begin_inset Quotes eld
\end_inset

ReviseT.R
\begin_inset Quotes erd
\end_inset

.
 [To be added ...]
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:bibliography"

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "/home/cooperw/RStudio/WAC"
options "bibtotoc,plainnat"

\end_inset


\end_layout

\begin_layout Standard
\align center

\family sans
\color blue
– End of Memo –
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
attach{attachment}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%
\backslash
attachm{first
\backslash

\backslash
second}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
cc{first attachment
\backslash

\backslash
second
\backslash

\backslash
3rd att}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
